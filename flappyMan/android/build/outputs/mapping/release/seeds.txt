com.mygdx.game.AndroidLauncher
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: int x
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mStencilSize
com.badlogic.gdx.AbstractInput: com.badlogic.gdx.utils.IntSet keysToCatch
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.math.Rectangle boundsBot
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: java.lang.String TAG
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: boolean flipped
com.badlogic.gdx.graphics.glutils.GLVersion: java.lang.String vendorString
com.mygdx.game.states.MenuState: com.badlogic.gdx.graphics.Texture playButton
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float x
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: boolean isDirty
com.badlogic.gdx.Graphics$BufferFormat: int depth
com.badlogic.gdx.backends.android.AndroidGraphics: float density
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int yoffset
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: float x
com.badlogic.gdx.graphics.glutils.VertexBufferObject: boolean ownsBuffer
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int bufferHandle
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String log
com.badlogic.gdx.utils.Array$ArrayIterator: boolean allowRemove
com.badlogic.gdx.graphics.VertexAttribute: int usageIndex
com.badlogic.gdx.utils.IntSet: int mask
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.Mesh$VertexDataType defaultVertexDataType
com.badlogic.gdx.net.NetJavaImpl$1: java.util.concurrent.atomic.AtomicInteger threadID
com.badlogic.gdx.backends.android.DefaultAndroidInput$KeyEvent: int type
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: boolean ownsBuffer
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config
com.badlogic.gdx.utils.ObjectIntMap: int[] valueTable
com.mygdx.game.states.GameOverState: com.badlogic.gdx.audio.Sound gameOverSfx
com.badlogic.gdx.backends.android.AndroidApplication: android.os.Handler handler
com.badlogic.gdx.graphics.glutils.KTXTextureData: int glFormat
com.badlogic.gdx.backends.android.DefaultAndroidInput: float[] R
com.badlogic.gdx.backends.android.AndroidGraphics: int safeInsetTop
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color GRAY
com.badlogic.gdx.graphics.glutils.IndexBufferObject: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.backends.android.DefaultAndroidFiles: java.lang.String externalFilesPath
com.badlogic.gdx.backends.android.AndroidMusic$1: com.badlogic.gdx.backends.android.AndroidMusic this$0
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle tmp
com.badlogic.gdx.backends.android.DefaultAndroidInput: com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter: com.badlogic.gdx.graphics.CubemapData cubemapData
com.badlogic.gdx.graphics.Cubemap$1: int val$refCount
com.mygdx.game.sprites.Superman: com.badlogic.gdx.math.Vector3 velocity
com.badlogic.gdx.backends.android.DefaultAndroidInput: float[] accelerometerValues
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean invalidated
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mRedSize
com.badlogic.gdx.graphics.GLTexture: int glTarget
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color TAN
com.badlogic.gdx.graphics.g2d.TextureRegion: float u
com.badlogic.gdx.graphics.glutils.VertexBufferObject: com.badlogic.gdx.graphics.VertexAttributes attributes
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object[] snapshot
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Entries entries1
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color VIOLET
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: char[] capChars
com.badlogic.gdx.graphics.g2d.SpriteBatch: int blendDstFuncAlpha
com.badlogic.gdx.backends.android.AndroidZipFileHandle: java.lang.String path
com.badlogic.gdx.graphics.VertexAttribute: boolean normalized
com.badlogic.gdx.backends.android.AndroidMusic: com.badlogic.gdx.audio.Music$OnCompletionListener onCompletionListener
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.glutils.InstanceData instances
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints
com.badlogic.gdx.utils.ObjectMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.StringBuilder: int length
com.badlogic.gdx.graphics.glutils.ShaderProgram: int vertexShaderHandle
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isWindows
com.badlogic.gdx.graphics.g2d.SpriteBatch: float colorPacked
com.mygdx.game.states.PlayState: com.badlogic.gdx.graphics.Texture lives1
com.badlogic.gdx.graphics.g2d.SpriteBatch: int renderCalls
com.badlogic.gdx.backends.android.DefaultAndroidInput: int[] touchY
com.badlogic.gdx.graphics.Color: float g
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureWrap vWrap
com.badlogic.gdx.graphics.Camera: float near
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: int y
com.badlogic.gdx.backends.android.DefaultAndroidInput: float[] magneticFieldValues
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format RGB888
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: boolean fixedWidth
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: boolean valid
com.badlogic.gdx.graphics.VertexAttribute: int numComponents
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode: com.badlogic.gdx.backends.android.AndroidGraphics this$0
com.badlogic.gdx.utils.Array: int size
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap pixmap
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type[] $VALUES
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: long basePtr
com.badlogic.gdx.math.Rectangle: float width
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color CORAL
com.badlogic.gdx.graphics.glutils.IndexBufferObject: java.nio.ShortBuffer buffer
com.badlogic.gdx.Graphics$BufferFormat: int r
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int r
com.badlogic.gdx.graphics.glutils.FileTextureData: int height
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int[] mValue
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int b
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 origin
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float capHeight
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter[] $VALUES
com.badlogic.gdx.backends.android.AndroidZipFileHandle: long fdLength
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean hideStatusBar
com.badlogic.gdx.utils.ObjectIntMap: java.lang.Object[] keyTable
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: int pointer
com.mygdx.game.states.LivesState: com.badlogic.gdx.audio.Music time
com.badlogic.gdx.utils.Pool: int max
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFontCache cache
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: java.util.Map buffers
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int touchSleepTime
com.badlogic.gdx.utils.ObjectMap: java.lang.Object[] keyTable
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMap
com.mygdx.game.states.PlayState: com.badlogic.gdx.graphics.Texture lives3
com.badlogic.gdx.graphics.Pixmap: com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation[] $VALUES
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int format
com.badlogic.gdx.backends.android.DefaultAndroidInput: android.content.Context context
com.badlogic.gdx.backends.android.AndroidMusic: com.badlogic.gdx.backends.android.AndroidAudio audio
com.badlogic.gdx.graphics.Texture: com.badlogic.gdx.assets.AssetManager assetManager
com.badlogic.gdx.utils.ObjectMap$Entry: java.lang.Object key
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float descent
com.badlogic.gdx.graphics.VertexAttribute: int offset
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vey
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter Nearest
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator1
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vez
com.badlogic.gdx.graphics.glutils.GLFrameBuffer$FrameBufferTextureAttachmentSpec: boolean isDepth
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: boolean defaultFramebufferHandleInitialized
com.badlogic.gdx.graphics.glutils.VertexArray: com.badlogic.gdx.graphics.VertexAttributes attributes
com.badlogic.gdx.AbstractInput: boolean[] justPressedKeys
com.badlogic.gdx.graphics.g2d.TextureRegion: com.badlogic.gdx.graphics.Texture texture
com.badlogic.gdx.backends.android.DefaultAndroidInput$1: com.badlogic.gdx.backends.android.DefaultAndroidInput this$0
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useAccelerometer
com.badlogic.gdx.backends.android.AndroidGraphics: int height
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color BROWN
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: java.nio.IntBuffer tmpHandle
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int stencil
com.badlogic.gdx.backends.android.AndroidSound: android.media.SoundPool soundPool
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.utils.Array regions
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: java.nio.FloatBuffer buffer
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean[] justPressedButtons
com.badlogic.gdx.utils.ObjectIntMap$Entries: com.badlogic.gdx.utils.ObjectIntMap$Entry entry
com.badlogic.gdx.math.Rectangle: float height
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color CYAN
com.badlogic.gdx.utils.ObjectMap: int mask
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.ApplicationLogger applicationLogger
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType Custom
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean disableAudio
com.badlogic.gdx.backends.android.AndroidGL20: int[] ints3
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float padLeft
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: float width
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format Intensity
com.badlogic.gdx.math.Rectangle: float y
com.badlogic.gdx.backends.android.AndroidApplication$1: com.badlogic.gdx.backends.android.AndroidApplication this$0
com.badlogic.gdx.backends.android.AndroidGraphics: int frames
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType Email
com.badlogic.gdx.graphics.glutils.VertexBufferObject: boolean isBound
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy
com.badlogic.gdx.utils.FloatArray: int size
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: java.lang.String[] imagePaths
com.mygdx.game.states.PlayState: com.mygdx.game.states.LivesState livesState
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Quaternion quat
com.badlogic.gdx.backends.android.DefaultAndroidInput$KeyEvent: char keyChar
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap uniformSizes
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: float v2
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.backends.android.AndroidApplicationBase app
com.badlogic.gdx.graphics.Mesh$1: int[] $SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType[] $VALUES
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap uniformTypes
com.mygdx.game.states.PlayState: com.badlogic.gdx.math.Vector2 groundPos2
com.badlogic.gdx.utils.Pool: int peak
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: int scrollAmountY
com.badlogic.gdx.graphics.glutils.KTXTextureData: int glTypeSize
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: com.badlogic.gdx.utils.IntArray cachedLocations
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type OpenGL
com.badlogic.gdx.backends.android.DefaultAndroidInput: com.badlogic.gdx.utils.Pool usedKeyEvents
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: int usage
com.badlogic.gdx.utils.ObjectIntMap$Entry: java.lang.Object key
com.badlogic.gdx.utils.IntSet: float loadFactor
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: boolean isBound
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean isPrepared
com.badlogic.gdx.graphics.Mesh: boolean isInstanced
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy
com.badlogic.gdx.utils.Array: java.lang.Object[] items
com.badlogic.gdx.backends.android.DefaultAndroidInput: android.hardware.SensorEventListener accelerometerListener
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.files.FileHandle fontFile
com.mygdx.game.states.PlayState: com.badlogic.gdx.audio.Sound passSfx
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: com.badlogic.gdx.graphics.VertexAttributes attributes
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: int width
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0
com.badlogic.gdx.graphics.glutils.IndexBufferObject: boolean isDirect
com.badlogic.gdx.backends.android.DefaultAndroidInput: float[] pressure
com.badlogic.gdx.utils.SharedLibraryLoader: java.util.HashSet loadedLibraries
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidGraphics graphics
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.collision.Ray ray
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.Gdx: com.badlogic.gdx.graphics.GL30 gl30
com.mygdx.game.states.State: com.badlogic.gdx.graphics.OrthographicCamera camera
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float y
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int depth
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType NumberPad
com.mygdx.game.states.PlayState: com.badlogic.gdx.graphics.Texture ground
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color BLUE
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int xoffset
com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Vector3 normal
com.mygdx.game.sprites.Obstacle: java.util.Random random
com.mygdx.game.states.GameOverState: com.badlogic.gdx.graphics.Texture playButton
com.badlogic.gdx.graphics.glutils.GLVersion: java.lang.String TAG
com.badlogic.gdx.math.Matrix4: float[] val
com.badlogic.gdx.graphics.VertexAttributes: int vertexSize
com.badlogic.gdx.utils.ObjectIntMap: int threshold
com.badlogic.gdx.graphics.Texture$TextureWrap: int glEnum
com.badlogic.gdx.graphics.g2d.TextureRegion: int regionHeight
com.badlogic.gdx.backends.android.DefaultAndroidInput: long currentEventTimeStamp
com.badlogic.gdx.backends.android.AndroidFileHandle: android.content.res.AssetManager assets
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.Color tempColor
com.badlogic.gdx.graphics.g2d.GlyphLayout: com.badlogic.gdx.utils.Pool glyphRunPool
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useCompass
com.badlogic.gdx.math.Vector3: float x
com.mygdx.game.FlappyMan: com.badlogic.gdx.graphics.g2d.SpriteBatch batch
com.badlogic.gdx.math.RandomXS128: long seed1
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture texture
com.badlogic.gdx.backends.android.AndroidNet: com.badlogic.gdx.net.NetJavaImpl netJavaImpl
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.glutils.IndexData indices
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: com.badlogic.gdx.graphics.Color color
com.mygdx.game.states.PlayState: com.badlogic.gdx.math.Vector2 groundPos1
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type NONE
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType Internal
com.badlogic.gdx.graphics.glutils.GLVersion: int majorVersion
com.mygdx.game.sprites.Animation: int frame
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isAndroid
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Plane[] planes
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.glutils.VertexData vertices
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String fragmentShaderSource
com.badlogic.gdx.utils.ObjectIntMap: float loadFactor
com.badlogic.gdx.utils.ObjectMap: int threshold
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color SKY
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureWrap uWrap
com.badlogic.gdx.backends.android.AndroidGraphics: boolean enforceContinuousRendering
com.badlogic.gdx.net.NetJavaImpl$1: com.badlogic.gdx.net.NetJavaImpl this$0
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat
com.badlogic.gdx.math.Frustum: float[] clipSpacePlanePointsArray
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.IntBuffer intbuf
com.badlogic.gdx.backends.android.DefaultAndroidInput$KeyEvent: int keyCode
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean rotationVectorAvailable
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap attributes
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: boolean hasNext
com.mygdx.game.states.PlayState: com.badlogic.gdx.graphics.Texture bg
com.badlogic.gdx.utils.ObjectMap: java.lang.Object[] valueTable
com.badlogic.gdx.graphics.g2d.GlyphLayout: float height
com.badlogic.gdx.graphics.glutils.ETC1TextureData: int height
com.badlogic.gdx.graphics.g2d.SpriteBatch: int blendSrcFuncAlpha
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format RGBA8888
com.badlogic.gdx.graphics.glutils.KTXTextureData: int glInternalFormat
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int width
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType HeadlessDesktop
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Matrix4 combined
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mAlphaSize
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: int EGL_CONTEXT_CLIENT_VERSION
com.badlogic.gdx.graphics.glutils.VertexArray: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.utils.IntSet: boolean hasZeroValue
com.mygdx.game.states.PlayState: com.badlogic.gdx.graphics.Texture lives2
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float padTop
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.files.FileHandle file
com.badlogic.gdx.backends.android.AndroidApplication: boolean firstResume
com.badlogic.gdx.utils.Array$ArrayIterator: boolean valid
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type WebGL
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color OLIVE
com.badlogic.gdx.backends.android.DefaultAndroidAudio: android.media.SoundPool soundPool
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int width
com.mygdx.game.states.LivesState: com.badlogic.gdx.graphics.Texture background
com.badlogic.gdx.backends.android.DefaultAndroidInput: int[] button
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float lineHeight
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.Texture lastTexture
com.badlogic.gdx.graphics.g2d.SpriteBatch: int idx
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color GREEN
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color SALMON
com.badlogic.gdx.utils.StringBuilder: char[] digits
com.badlogic.gdx.backends.android.DefaultAndroidFiles: com.badlogic.gdx.backends.android.ZipResourceFile expansionFile
com.badlogic.gdx.backends.android.AndroidGraphics: int safeInsetRight
com.badlogic.gdx.Graphics$BufferFormat: int stencil
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 Y
com.badlogic.gdx.backends.android.AndroidApplication: boolean isWaitingForAudio
com.mygdx.game.sprites.Animation: com.badlogic.gdx.utils.Array framesArray
com.badlogic.gdx.Graphics$DisplayMode: int refreshRate
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean getTouchEventsForLiveWallpaper
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType iOS
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Frustum frustum
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format RGBA4444
com.badlogic.gdx.Graphics$BufferFormat: int g
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean drawing
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType Classpath
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Keys keys2
com.badlogic.gdx.math.Quaternion: float z
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color ROYAL
com.badlogic.gdx.utils.Collections: boolean allocateIterators
com.badlogic.gdx.graphics.g2d.SpriteBatch: float invTexHeight
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpVec
com.mygdx.game.states.GameOverState: com.badlogic.gdx.graphics.Texture gameOver
com.badlogic.gdx.graphics.glutils.VertexBufferObject: java.nio.FloatBuffer buffer
com.badlogic.gdx.backends.android.DefaultAndroidFiles: java.lang.String localpath
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format Alpha
com.badlogic.gdx.utils.ObjectIntMap: int shift
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color BLACK
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1: com.badlogic.gdx.backends.android.AndroidApplicationBase val$application
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color GOLDENROD
com.badlogic.gdx.utils.Array: com.badlogic.gdx.utils.Array$ArrayIterable iterable
com.badlogic.gdx.backends.android.AndroidGraphics: float ppcX
com.badlogic.gdx.backends.android.AndroidGL20: int[] ints2
com.badlogic.gdx.backends.android.DefaultAndroidInput: int[] deltaY
com.badlogic.gdx.graphics.g2d.SpriteBatch: int blendSrcFunc
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: java.nio.FloatBuffer buffer
com.badlogic.gdx.utils.Array$ArrayIterable: com.badlogic.gdx.utils.Array$ArrayIterator iterator1
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidFiles files
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color DARK_GRAY
com.badlogic.gdx.backends.android.AndroidGraphics: int fps
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean keyboardAvailable
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String prependFragmentCode
com.badlogic.gdx.graphics.Texture: com.badlogic.gdx.graphics.TextureData data
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: int type
com.badlogic.gdx.graphics.g2d.SpriteBatch: int totalRenderCalls
com.badlogic.gdx.math.Quaternion: float w
com.badlogic.gdx.backends.android.AndroidGraphics: long frameStart
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType External
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 X
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: char[] xChars
com.badlogic.gdx.graphics.g2d.BitmapFontCache: int[] tempGlyphCount
com.badlogic.gdx.graphics.glutils.GLFrameBuffer$FrameBufferTextureAttachmentSpec: boolean isFloat
com.badlogic.gdx.graphics.glutils.GLVersion: int releaseVersion
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 Y
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 Z
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mBlueSize
com.badlogic.gdx.graphics.glutils.KTXTextureData: int glBaseInternalFormat
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES
com.badlogic.gdx.math.Quaternion: float x
com.badlogic.gdx.graphics.glutils.IndexBufferObject: boolean isDirty
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean isPrepared
com.badlogic.gdx.utils.IntSet: int size
com.mygdx.game.sprites.Animation: int frameCount
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: com.badlogic.gdx.utils.Array textureAttachments
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: int targetGLESVersion
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: char[] breakChars
com.badlogic.gdx.backends.android.AndroidGraphics: boolean running
com.badlogic.gdx.backends.android.DefaultAndroidAudio: android.media.AudioManager manager
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: java.lang.String name
com.badlogic.gdx.graphics.glutils.IndexArray: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.utils.IntArray: int[] items
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float down
com.mygdx.game.states.PlayState: int lives
com.badlogic.gdx.backends.android.DefaultAndroidInput: android.hardware.SensorManager manager
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha
com.badlogic.gdx.utils.StreamUtils: byte[] EMPTY_BYTES
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType[] $VALUES
com.badlogic.gdx.graphics.glutils.IndexBufferObject: boolean ownsBuffer
com.badlogic.gdx.assets.AssetLoaderParameters: com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback
com.badlogic.gdx.net.NetJavaImpl: com.badlogic.gdx.utils.ObjectMap connections
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 up
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mDepthSize
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: com.badlogic.gdx.graphics.glutils.GLFrameBuffer$GLFrameBufferBuilder bufferBuilder
com.badlogic.gdx.backends.android.AndroidGraphics: long lastFrameTime
com.badlogic.gdx.graphics.glutils.KTXTextureData: int pixelDepth
com.mygdx.game.sprites.Superman: com.mygdx.game.sprites.Animation supermanAnimation
com.badlogic.gdx.utils.Array$ArrayIterable: com.badlogic.gdx.utils.Array array
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Pixmap$Format format
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String[] attributeNames
com.badlogic.gdx.backends.android.AndroidSound: com.badlogic.gdx.utils.IntArray streamIds
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mGreenSize
com.mygdx.game.states.PlayState: com.badlogic.gdx.utils.Array tubesArray
com.badlogic.gdx.graphics.GLTexture: int glHandle
com.badlogic.gdx.backends.android.DefaultAndroidInput: com.badlogic.gdx.utils.Pool usedTouchEvents
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture$TextureWrap wrapV
com.badlogic.gdx.graphics.g2d.TextureRegion: float u2
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: com.badlogic.gdx.utils.ObjectIntMap map
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color FOREST
com.badlogic.gdx.backends.android.AndroidGraphics: boolean created
com.badlogic.gdx.backends.android.DefaultAndroidInput: com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler
com.badlogic.gdx.backends.android.AndroidZipFileHandle: com.badlogic.gdx.backends.android.ZipResourceFile expansionFile
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int page
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter: com.badlogic.gdx.graphics.Texture$TextureWrap wrapV
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color TEAL
com.badlogic.gdx.backends.android.AndroidGraphics: float ppcY
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType Local
com.badlogic.gdx.utils.IntArray: boolean ordered
com.badlogic.gdx.backends.android.DefaultAndroidInput: java.util.ArrayList genericMotionListeners
com.badlogic.gdx.graphics.glutils.GLFrameBuffer$FrameBufferTextureAttachmentSpec: boolean isStencil
com.badlogic.gdx.backends.android.AndroidMusic: android.media.MediaPlayer player
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidNet net
com.badlogic.gdx.backends.android.DefaultAndroidInput: float[] rotationVectorValues
com.badlogic.gdx.utils.Array$ArrayIterator: int index
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType Password
com.badlogic.gdx.graphics.VertexAttributes: long mask
com.badlogic.gdx.utils.ObjectMap$MapIterator: boolean valid
com.badlogic.gdx.Gdx: com.badlogic.gdx.Audio audio
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int usage
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useGL30
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.math.Matrix4 transformMatrix
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean pedantic
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES
com.badlogic.gdx.backends.android.DefaultAndroidInput: int[] deltaX
com.mygdx.game.states.State: com.badlogic.gdx.math.Vector3 mouse
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.Graphics$BufferFormat bufferFormat
com.badlogic.gdx.backends.android.DefaultAndroidInput: int sleepTime
com.badlogic.gdx.graphics.g2d.GlyphLayout: com.badlogic.gdx.utils.Array colorStack
com.mygdx.game.sprites.Superman: com.badlogic.gdx.audio.Sound tapSfx
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion tmp2
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 position
com.badlogic.gdx.graphics.Pixmap: com.badlogic.gdx.graphics.Pixmap$Filter filter
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float ascent
com.badlogic.gdx.graphics.Texture$1: int val$refCount
com.badlogic.gdx.backends.android.AndroidGraphics: int safeInsetLeft
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Matrix4 view
com.badlogic.gdx.graphics.g2d.SpriteBatch: int blendDstFunc
com.badlogic.gdx.graphics.glutils.FileTextureData: int width
com.badlogic.gdx.graphics.g2d.SpriteBatch: float[] vertices
com.mygdx.game.states.PlayState: com.mygdx.game.states.GameOverState gameOverState
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean requestFocus
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type GLES
com.badlogic.gdx.utils.SnapshotArray: int snapshots
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean flipped
com.badlogic.gdx.utils.IntArray: int size
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.Gdx: com.badlogic.gdx.Files files
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter: com.badlogic.gdx.graphics.Pixmap$Format format
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: boolean isMRT
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Matrix4 projection
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: java.lang.String name
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion tmp1
com.badlogic.gdx.utils.ObjectIntMap: int size
com.badlogic.gdx.graphics.glutils.ETC1: int ETC1_RGB8_OES
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Keys keys1
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidClipboard clipboard
com.badlogic.gdx.utils.ObjectIntMap: int mask
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: boolean markupEnabled
com.badlogic.gdx.graphics.Cubemap: com.badlogic.gdx.assets.AssetManager assetManager
com.badlogic.gdx.backends.android.AndroidApplication: int logLevel
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float xHeight
com.badlogic.gdx.backends.android.AndroidMouseHandler: int deltaY
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 tmpVec
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean ownsTexture
com.badlogic.gdx.backends.android.AndroidGL20: byte[] buffer
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color LIME
com.badlogic.gdx.utils.StringBuilder: char[] chars
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: int height
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color WHITE
com.badlogic.gdx.backends.android.DefaultAndroidInput: java.util.ArrayList keyEvents
com.mygdx.game.sprites.Superman: com.badlogic.gdx.graphics.Texture superman
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: float offsetX
com.badlogic.gdx.graphics.GLTexture: float maxAnisotropicFilterLevel
com.badlogic.gdx.backends.android.AndroidGraphics: boolean isContinuous
com.badlogic.gdx.backends.android.DefaultAndroidAudio: java.util.List musics
com.badlogic.gdx.utils.BufferUtils: com.badlogic.gdx.utils.Array unsafeBuffers
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: int currentIndex
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mDepthSize
com.badlogic.gdx.backends.android.AndroidGraphics: float ppiX
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String vertexShaderSource
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.ApplicationListener listener
com.badlogic.gdx.graphics.g2d.GlyphLayout: float width
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isLinux
com.badlogic.gdx.graphics.g2d.GlyphLayout: com.badlogic.gdx.utils.Pool colorPool
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: int depthStencilPackedBufferHandle
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: boolean isStatic
com.badlogic.gdx.graphics.OrthographicCamera: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String[] uniformNames
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mAlphaSize
com.badlogic.gdx.graphics.PixmapIO$CIM: byte[] readBuffer
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.FloatBuffer matrix
com.badlogic.gdx.utils.ObjectMap$MapIterator: com.badlogic.gdx.utils.ObjectMap map
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.math.Vector2 posTopObstacle
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending None
com.badlogic.gdx.backends.android.AndroidApplication: boolean useImmersiveMode
com.badlogic.gdx.utils.ReflectionPool: com.badlogic.gdx.utils.reflect.Constructor constructor
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useWakelock
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation Portrait
com.badlogic.gdx.graphics.VertexAttribute: int type
com.badlogic.gdx.graphics.glutils.ShaderProgram: int refCount
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color MAROON
com.badlogic.gdx.graphics.glutils.ETC1TextureData: int width
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isARM
com.badlogic.gdx.graphics.GLTexture: float anisotropicFilterLevel
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: int index
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color SCARLET
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int[] s_configAttribs2
com.badlogic.gdx.graphics.glutils.MipMapGenerator: boolean useHWMipMap
com.badlogic.gdx.graphics.glutils.KTXTextureData: int pixelWidth
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.math.Vector2 posBottomObstacle
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color SLATE
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color RED
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color CHARTREUSE
com.badlogic.gdx.utils.IntSet: int shift
com.badlogic.gdx.graphics.Pixmap: boolean disposed
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float currentTint
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: int vaoHandle
com.badlogic.gdx.backends.android.AndroidGraphics$1: com.badlogic.gdx.backends.android.AndroidGraphics this$0
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int originalHeight
com.badlogic.gdx.backends.android.AndroidGraphics: javax.microedition.khronos.egl.EGLContext eglContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int EGL_OPENGL_ES2_BIT
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: java.nio.ByteBuffer compressedData
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: boolean genMipMaps
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.math.Matrix4 projectionMatrix
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Matrix4 invProjectionView
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int[] mConfigAttribs
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.IntBuffer params
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1: com.badlogic.gdx.backends.android.AndroidVisibilityListener this$0
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color PINK
com.badlogic.gdx.graphics.Color: float r
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Entries entries1
com.badlogic.gdx.net.NetJavaImpl: com.badlogic.gdx.utils.ObjectMap listeners
com.badlogic.gdx.graphics.glutils.KTXTextureData: int pixelHeight
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectWithVAO
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: float offsetY
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidAudio audio
com.badlogic.gdx.utils.GdxNativesLoader: boolean disableNativesLoading
com.badlogic.gdx.Graphics$DisplayMode: int width
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isIos
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont font
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mRedSize
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.math.Matrix4 combinedMatrix
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.graphics.Texture bottomObstacle
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.utils.Array pooledLayouts
com.badlogic.gdx.utils.IntSet: int[] keyTable
com.badlogic.gdx.graphics.OrthographicCamera: float zoom
com.badlogic.gdx.graphics.Mesh: java.util.Map meshes
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color PURPLE
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: boolean isStatic
com.mygdx.game.states.GameStateManager: java.util.Stack states
com.badlogic.gdx.graphics.glutils.IndexBufferObject: boolean empty
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpForward
com.badlogic.gdx.graphics.VertexAttributes: com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable iterable
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color GOLD
com.badlogic.gdx.math.Vector2: float x
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean accelerometerAvailable
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: int dataOffset
com.badlogic.gdx.utils.ObjectIntMap$Entry: int value
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: com.badlogic.gdx.utils.Array glyphs
com.badlogic.gdx.backends.android.DefaultAndroidInput: java.util.ArrayList keyListeners
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.graphics.GL30 gl30
com.badlogic.gdx.backends.android.DefaultAndroidInput: float azimuth
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: byte[][] kerning
com.mygdx.game.states.PlayState: com.badlogic.gdx.graphics.g2d.BitmapFont livesFont
com.badlogic.gdx.utils.ObjectMap: float loadFactor
com.badlogic.gdx.utils.ObjectMap$Entry: java.lang.Object value
com.badlogic.gdx.backends.android.DefaultAndroidInput: com.badlogic.gdx.Input$Orientation nativeOrientation
com.badlogic.gdx.graphics.Texture$TextureFilter: int glEnum
com.badlogic.gdx.Gdx: com.badlogic.gdx.graphics.GL20 gl
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int height
com.badlogic.gdx.backends.android.AndroidMusic: boolean wasPlaying
com.mygdx.game.states.LivesState: com.badlogic.gdx.graphics.g2d.BitmapFont clickAnywhere
com.badlogic.gdx.graphics.glutils.ETC1: int PKM_HEADER_SIZE
com.badlogic.gdx.backends.android.AndroidGraphics: java.lang.Object synch
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int srcX
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: int depthbufferHandle
com.badlogic.gdx.backends.android.AndroidSound: android.media.AudioManager manager
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture$TextureWrap wrapU
com.badlogic.gdx.graphics.Mesh: boolean isVertexArray
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 Zero
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 tmpV
com.badlogic.gdx.graphics.glutils.VertexBufferObject: int bufferHandle
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph missingGlyph
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float scaleX
com.badlogic.gdx.backends.android.AndroidGraphics: float deltaTime
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType Applet
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mBlueSize
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.glutils.ShaderProgram customShader
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: int button
com.badlogic.gdx.backends.android.DefaultAndroidInput: float pitch
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array runnables
com.badlogic.gdx.backends.android.AndroidApplication: int wasFocusChanged
com.badlogic.gdx.utils.SharedLibraryLoader: boolean is64Bit
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 direction
com.badlogic.gdx.graphics.glutils.KTXTextureData: java.nio.ByteBuffer compressedData
com.badlogic.gdx.graphics.g2d.BitmapFontCache: int glyphCount
com.badlogic.gdx.Graphics$BufferFormat: boolean coverageSampling
com.badlogic.gdx.graphics.glutils.VertexArray: boolean isBound
com.badlogic.gdx.backends.android.AndroidGraphics: boolean resume
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear
com.badlogic.gdx.backends.android.DefaultAndroidInput: android.hardware.SensorEventListener gyroscopeListener
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int maxNetThreads
com.badlogic.gdx.AbstractInput: boolean keyJustPressed
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.Mesh mesh
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType URI
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension: int height
com.badlogic.gdx.graphics.Colors: com.badlogic.gdx.utils.ObjectMap map
com.badlogic.gdx.graphics.glutils.ShaderProgram: int program
com.badlogic.gdx.utils.Pool: com.badlogic.gdx.utils.Array freeObjects
com.badlogic.gdx.graphics.glutils.KTXTextureData: com.badlogic.gdx.files.FileHandle file
com.badlogic.gdx.utils.ObjectMap: java.lang.Object dummy
com.badlogic.gdx.utils.Pools: com.badlogic.gdx.utils.ObjectMap typePools
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float padRight
com.badlogic.gdx.files.FileHandle: java.io.File file
com.badlogic.gdx.graphics.glutils.KTXTextureData: int numberOfArrayElements
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: int stencilbufferHandle
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge
com.badlogic.gdx.backends.android.DefaultAndroidInput$2: com.badlogic.gdx.backends.android.DefaultAndroidInput this$0
com.mygdx.game.states.MenuState: com.badlogic.gdx.graphics.Texture title
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType Android
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Quaternion quat2
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: int framebufferHandle
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int numSamples
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.Files$FileType type
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vex
com.mygdx.game.states.PlayState: com.badlogic.gdx.math.Vector2 bgPos2
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float padBottom
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean gyroscopeAvailable
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int g
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int usage
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 direction
com.badlogic.gdx.graphics.glutils.VertexBufferObject: boolean isDirty
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: java.nio.ShortBuffer buffer
com.badlogic.gdx.graphics.glutils.VertexBufferObject: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.utils.ObjectMap: int shift
com.badlogic.gdx.graphics.glutils.KTXTextureData: int imagePos
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: float y
com.mygdx.game.sprites.Animation: float currentFrameTime
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color LIGHT_GRAY
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useGyroscope
com.badlogic.gdx.utils.reflect.Constructor: java.lang.reflect.Constructor constructor
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: boolean isDirty
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.TextureData textureData
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType Absolute
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Entries entries2
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float[][] pageVertices
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int usage
com.badlogic.gdx.graphics.TextureArray: java.util.Map managedTextureArrays
com.badlogic.gdx.graphics.Pixmap: com.badlogic.gdx.graphics.Pixmap$Blending blending
com.badlogic.gdx.backends.android.AndroidGraphics: int safeInsetBottom
com.badlogic.gdx.net.NetJavaImpl: java.util.concurrent.ThreadPoolExecutor executorService
com.badlogic.gdx.utils.ObjectMap$Entries: com.badlogic.gdx.utils.ObjectMap$Entry entry
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap$Format format
com.badlogic.gdx.utils.FloatArray: float[] items
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: boolean hasDepthStencilPackedBuffer
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter Linear
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.graphics.Texture topObstacle
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color YELLOW
com.badlogic.gdx.graphics.VertexAttributes: com.badlogic.gdx.graphics.VertexAttribute[] attributes
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: boolean isBound
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap attributeTypes
com.badlogic.gdx.backends.android.DefaultAndroidInput: com.badlogic.gdx.backends.android.AndroidMouseHandler mouseHandler
com.badlogic.gdx.utils.IntSet: int threshold
com.badlogic.gdx.backends.android.DefaultAndroidInput: float[] orientation
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color CLEAR
com.badlogic.gdx.backends.android.AndroidGL20: int[] ints
com.badlogic.gdx.Graphics$BufferFormat: int b
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpUp
com.mygdx.game.FlappyMan: com.mygdx.game.states.GameStateManager gameStateManager
com.badlogic.gdx.math.MathUtils: java.util.Random random
com.badlogic.gdx.graphics.Cubemap: java.util.Map managedCubemaps
com.badlogic.gdx.graphics.g2d.TextureRegion: float v
com.badlogic.gdx.AbstractInput: boolean[] pressedKeys
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.IntBuffer type
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean useMipMaps
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mStencilSize
com.badlogic.gdx.Graphics$DisplayMode: int height
com.mygdx.game.states.PlayState: com.badlogic.gdx.math.Vector2 bgPos1
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean isCompiled
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: float u2
com.badlogic.gdx.Graphics$DisplayMode: int bitsPerPixel
com.badlogic.gdx.graphics.VertexAttribute: int unit
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: int scrollAmountX
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter: com.badlogic.gdx.graphics.Texture$TextureWrap wrapU
com.badlogic.gdx.graphics.Camera: float viewportHeight
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: java.lang.Object[] array
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectMap shaders
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.utils.IntArray[] pageGlyphIndices
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color NAVY
com.badlogic.gdx.graphics.g2d.BitmapFontCache: int[] idx
com.badlogic.gdx.utils.ObjectMap$MapIterator: int nextIndex
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest
com.badlogic.gdx.graphics.TextureArray: com.badlogic.gdx.graphics.TextureArrayData data
com.badlogic.gdx.math.Vector3: float y
com.mygdx.game.states.LivesState: int lives
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean useMipMaps
com.badlogic.gdx.backends.android.DefaultAndroidInput$5: int[] $SwitchMap$com$badlogic$gdx$Input$OnscreenKeyboardType
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.SnapshotArray lifecycleListeners
com.badlogic.gdx.backends.android.DefaultAndroidFiles: android.content.res.AssetManager assets
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator2
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap Repeat
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mNumSamples
com.badlogic.gdx.backends.android.AndroidMusic: float volume
com.badlogic.gdx.graphics.VertexAttribute: int usage
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType Desktop
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean[] touched
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean justTouched
com.badlogic.gdx.graphics.g2d.SpriteBatch: float invTexWidth
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useImmersiveMode
com.badlogic.gdx.graphics.Pixmap: int color
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object[] recycled
com.badlogic.gdx.backends.android.AndroidMusic: boolean isPrepared
com.mygdx.game.sprites.Animation: float maxFrameTime
com.badlogic.gdx.graphics.glutils.ShaderProgram: int fragmentShaderHandle
com.badlogic.gdx.utils.ObjectMap$MapIterator: int currentIndex
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useRotationVectorSensor
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.graphics.glutils.VertexBufferObject: int usage
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color ORANGE
com.badlogic.gdx.backends.android.DefaultAndroidInput: android.hardware.SensorEventListener compassListener
com.badlogic.gdx.graphics.glutils.KTXTextureData: int glType
com.mygdx.game.sprites.Obstacle: int randomNumber
com.mygdx.game.states.PlayState: com.badlogic.gdx.audio.Sound scoreSfx
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String prependVertexCode
com.mygdx.game.states.LivesState: java.lang.String text
com.badlogic.gdx.utils.Array$ArrayIterable: com.badlogic.gdx.utils.Array$ArrayIterator iterator2
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color MAGENTA
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: boolean isBound
com.badlogic.gdx.backends.android.DefaultAndroidInput: int[] touchX
com.mygdx.game.states.PlayState: com.mygdx.game.sprites.Superman superman
com.badlogic.gdx.graphics.Cubemap: com.badlogic.gdx.graphics.CubemapData data
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.utils.ObjectMap: int size
com.badlogic.gdx.utils.Array: boolean ordered
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Entries entries2
com.mygdx.game.states.GameOverState: com.badlogic.gdx.graphics.Texture background
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: com.badlogic.gdx.utils.FloatArray xAdvances
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 Zero
com.badlogic.gdx.backends.android.AndroidZipFileHandle: boolean hasAssetFd
com.mygdx.game.states.PlayState: com.badlogic.gdx.graphics.g2d.BitmapFont scoreFont
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int height
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Matrix4 tmpMat
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.String nativesJar
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: boolean isDirect
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap uniforms
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: int nextIndex
com.badlogic.gdx.math.Vector2: float y
com.mygdx.game.sprites.Superman: com.badlogic.gdx.math.Vector3 position
com.badlogic.gdx.graphics.g2d.GlyphLayout: com.badlogic.gdx.utils.Array runs
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: float u
com.mygdx.game.FlappyMan: com.badlogic.gdx.audio.Music music
com.badlogic.gdx.Gdx: com.badlogic.gdx.Application app
com.badlogic.gdx.graphics.g2d.SpriteBatch: int maxSpritesInBatch
com.badlogic.gdx.backends.android.DefaultAndroidInput: com.badlogic.gdx.InputProcessor processor
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.math.Rectangle boundsTop
com.badlogic.gdx.graphics.g2d.BitmapFontCache: boolean integer
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: long[] nativeData
com.badlogic.gdx.utils.Array$ArrayIterable: boolean allowRemove
com.badlogic.gdx.backends.android.AndroidGraphics: int[] value
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1: com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 this$1
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format RGB565
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation Landscape
com.badlogic.gdx.graphics.glutils.KTXTextureData: int numberOfMipmapLevels
com.badlogic.gdx.graphics.g2d.TextureRegion: int regionWidth
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs
com.badlogic.gdx.graphics.Texture: java.util.Map managedTextures
com.badlogic.gdx.Gdx: com.badlogic.gdx.Net net
com.badlogic.gdx.graphics.glutils.IndexBufferObject: boolean isBound
com.badlogic.gdx.graphics.glutils.GLVersion: int minorVersion
com.badlogic.gdx.utils.GdxNativesLoader: boolean nativesLoaded
com.badlogic.gdx.backends.android.DefaultAndroidInput: float[] gyroscopeValues
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: int bufferHandle
com.badlogic.gdx.utils.FloatArray: boolean ordered
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mGreenSize
com.badlogic.gdx.graphics.Camera: float far
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int maxSimultaneousSounds
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 tmpMat
com.badlogic.gdx.math.RandomXS128: long seed0
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array executedRunnables
com.badlogic.gdx.backends.android.AndroidSound: int soundId
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: com.badlogic.gdx.graphics.VertexAttributes attributes
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter BiLinear
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer pixelPtr
com.badlogic.gdx.backends.android.AndroidGraphics: long frameId
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: int defaultFramebufferHandle
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean integer
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.files.FileHandle file
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean blendingDisabled
com.badlogic.gdx.graphics.PixmapIO$CIM: byte[] writeBuffer
com.badlogic.gdx.Graphics$BufferFormat: int samples
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int id
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean hasMultitouch
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int bufferHandle
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.utils.Array layouts
com.badlogic.gdx.backends.android.DefaultAndroidInput: java.util.ArrayList touchEvents
com.mygdx.game.sprites.Superman: com.badlogic.gdx.math.Rectangle bounds
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension: int width
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: boolean isDirty
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean compassAvailable
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.audio.Sound collidesSfx
com.badlogic.gdx.backends.android.AndroidClipboard: android.content.ClipboardManager clipboard
com.mygdx.game.states.State: com.mygdx.game.states.GameStateManager gameStateManager
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap attributeSizes
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 right
com.badlogic.gdx.math.Plane: float d
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean ownsShader
com.mygdx.game.states.LivesState: int score
com.badlogic.gdx.AbstractInput: int pressedKeyCount
com.badlogic.gdx.graphics.glutils.IndexArray: boolean empty
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int bufferHandle
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int srcY
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int xadvance
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.math.Vector3 tmpV
com.badlogic.gdx.graphics.glutils.GLVersion: java.lang.String rendererString
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 X
com.badlogic.gdx.backends.android.AndroidGraphics: boolean destroy
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: boolean valid
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float scaleY
com.badlogic.gdx.backends.android.DefaultAndroidInput$KeyEvent: long timeStamp
com.badlogic.gdx.backends.android.DefaultAndroidInput: android.hardware.SensorEventListener rotationVectorListener
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType Default
com.badlogic.gdx.Graphics$BufferFormat: int a
com.mygdx.game.states.PlayState: int score
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter: com.badlogic.gdx.graphics.Cubemap cubemap
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 view
com.badlogic.gdx.graphics.glutils.VertexArray: java.nio.FloatBuffer buffer
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: float v
com.badlogic.gdx.backends.android.DefaultAndroidInput: float roll
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType[] $VALUES
com.badlogic.gdx.graphics.g2d.TextureRegion: float v2
com.badlogic.gdx.graphics.Mesh: boolean autoBind
com.badlogic.gdx.Gdx: com.badlogic.gdx.Graphics graphics
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType PhonePad
com.badlogic.gdx.backends.android.AndroidGraphics: java.lang.String extensions
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float spaceXadvance
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int sensorDelay
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.Gdx: com.badlogic.gdx.graphics.GL20 gl20
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isMac
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle tmp2
com.badlogic.gdx.backends.android.DefaultAndroidInput: com.badlogic.gdx.Application app
com.badlogic.gdx.backends.android.DefaultAndroidInput: android.os.Vibrator vibrator
com.badlogic.gdx.graphics.Color: float a
com.badlogic.gdx.backends.android.AndroidNet: com.badlogic.gdx.backends.android.AndroidApplicationBase app
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: java.lang.Object[] array
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int packedHeight
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending SourceOver
com.badlogic.gdx.math.Frustum: float[] planePointsArray
com.badlogic.gdx.backends.android.DefaultAndroidInput$SensorListener: com.badlogic.gdx.backends.android.DefaultAndroidInput this$0
com.badlogic.gdx.utils.BufferUtils: int allocatedUnsafe
com.badlogic.gdx.utils.Array$ArrayIterator: com.badlogic.gdx.utils.Array array
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array androidEventListeners
com.badlogic.gdx.Gdx: com.badlogic.gdx.Input input
com.badlogic.gdx.files.FileHandle$1: int[] $SwitchMap$com$badlogic$gdx$Files$FileType
com.badlogic.gdx.backends.android.AndroidGraphics: float ppiY
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidInput input
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3[] planePoints
com.badlogic.gdx.math.Rectangle: float x
com.mygdx.game.states.MenuState: com.badlogic.gdx.graphics.Texture background
com.badlogic.gdx.graphics.glutils.GLVersion: com.badlogic.gdx.graphics.glutils.GLVersion$Type type
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int a
com.badlogic.gdx.graphics.VertexAttribute: java.lang.String alias
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data
com.badlogic.gdx.backends.android.DefaultAndroidInput: android.os.Handler handle
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: com.badlogic.gdx.Input$OnscreenKeyboardType onscreenKeyboardType
com.badlogic.gdx.math.Vector3: float z
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: boolean isDirect
com.badlogic.gdx.graphics.Camera: float viewportWidth
com.badlogic.gdx.graphics.glutils.KTXTextureData: boolean useMipMaps
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color FIREBRICK
com.badlogic.gdx.backends.android.AndroidGraphics: boolean pause
com.badlogic.gdx.backends.android.AndroidApplication: boolean hideStatusBar
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.glutils.ShaderProgram shader
com.badlogic.gdx.backends.android.DefaultAndroidInput: int[] realId
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int[] mValue
com.badlogic.gdx.backends.android.AndroidMouseHandler: int deltaX
com.badlogic.gdx.graphics.Color: float b
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.graphics.glutils.GLVersion glVersion
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType WebGL
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: long timeStamp
com.badlogic.gdx.math.Quaternion: float y
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float blankLineScale
com.badlogic.gdx.backends.android.AndroidGraphics: int width
com.badlogic.gdx.graphics.Color: float WHITE_FLOAT_BITS
com.badlogic.gdx.graphics.glutils.IndexArray: java.nio.ShortBuffer buffer
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.graphics.GL20 gl20
com.badlogic.gdx.graphics.glutils.KTXTextureData: int numberOfFaces
com.badlogic.gdx.graphics.Mesh: void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh)
com.badlogic.gdx.backends.android.AndroidGL20: void glBindBuffer(int,int)
com.badlogic.gdx.backends.android.DefaultAndroidAudio: com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: void setKerning(int,int)
com.mygdx.game.states.GameOverState: void dispose()
com.badlogic.gdx.graphics.Pixmap$Format: Pixmap$Format(java.lang.String,int)
com.badlogic.gdx.backends.android.AndroidFileHandle: long length()
com.badlogic.gdx.graphics.VertexAttribute: int getKey()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: java.lang.Object next()
com.badlogic.gdx.backends.android.AndroidTouchHandler: void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.DefaultAndroidInput)
com.badlogic.gdx.backends.android.AndroidApplication: void setApplicationLogger(com.badlogic.gdx.ApplicationLogger)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform1i(int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence)
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean useMipMaps()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void fetchUniforms()
com.badlogic.gdx.graphics.GLTexture: float unsafeSetAnisotropicFilter(float,boolean)
com.badlogic.gdx.backends.android.AndroidGL30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.files.FileHandle: java.io.InputStream read()
com.badlogic.gdx.backends.android.AndroidGraphics: boolean supportsExtension(java.lang.String)
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.ApplicationListener getApplicationListener()
com.badlogic.gdx.backends.android.AndroidFileHandle: AndroidFileHandle(android.content.res.AssetManager,java.lang.String,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.backends.android.AndroidGraphics: void pause()
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending[] values()
com.mygdx.game.states.GameOverState: void update(float)
com.badlogic.gdx.backends.android.DefaultAndroidFiles: com.badlogic.gdx.backends.android.ZipResourceFile getExpansionFile()
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.mygdx.game.states.GameOverState: void render(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
com.badlogic.gdx.utils.StringBuilder: java.lang.String toString()
com.badlogic.gdx.backends.android.AndroidGL20: void glDisableVertexAttribArray(int)
com.badlogic.gdx.utils.IntSet: int locateKey(int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int)
com.mygdx.game.states.PlayState: void updateBg()
com.badlogic.gdx.math.RandomXS128: boolean nextBoolean()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glDrawArrays(int,int,int)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: VertexBufferObjectSubData(boolean,int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.backends.android.DefaultAndroidInput: int getRotation()
com.mygdx.game.sprites.Superman: com.badlogic.gdx.graphics.g2d.TextureRegion getSuperman()
com.badlogic.gdx.graphics.TextureArray: void clearAllTextureArrays(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getGLInternalFormat()
com.badlogic.gdx.graphics.g2d.TextureRegion: int getRegionY()
com.badlogic.gdx.utils.Array$ArrayIterable: com.badlogic.gdx.utils.Array$ArrayIterator iterator()
com.badlogic.gdx.utils.SnapshotArray: void clear()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: VertexAttributes$ReadonlyIterable(java.lang.Object[])
com.badlogic.gdx.backends.android.AndroidGL20: void glClear(int)
com.badlogic.gdx.graphics.Color: int rgba8888(float,float,float,float)
com.badlogic.gdx.math.Plane: void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1: void onSystemUiVisibilityChange(int)
com.badlogic.gdx.utils.FloatArray: void addAll(com.badlogic.gdx.utils.FloatArray)
com.badlogic.gdx.utils.FloatArray: FloatArray(boolean,int)
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.ApplicationLogger getApplicationLogger()
com.badlogic.gdx.utils.Array: void removeRange(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1: void sendDownUpKeyEventForBackwardCompatibility(int)
com.badlogic.gdx.backends.android.DefaultAndroidInput: int[] resize(int[])
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getHeight()
com.badlogic.gdx.backends.android.AndroidApplicationLogger: void error(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.ObjectIntMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.BufferUtils: java.nio.FloatBuffer newFloatBuffer(int)
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Keys keys()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: Gdx2DPixmap(byte[],int,int,int)
com.badlogic.gdx.graphics.Color: boolean equals(java.lang.Object)
com.mygdx.game.sprites.Superman: void jump()
com.badlogic.gdx.backends.android.AndroidMusic: void play()
com.badlogic.gdx.backends.android.AndroidZipFileHandle: java.io.InputStream read()
com.badlogic.gdx.graphics.Texture$TextureWrap: Texture$TextureWrap(java.lang.String,int,int)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle parent()
com.badlogic.gdx.utils.ObjectIntMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: TextureLoader$TextureParameter()
com.badlogic.gdx.math.RandomXS128: int next(int)
com.badlogic.gdx.graphics.Color: java.lang.String toString()
com.badlogic.gdx.backends.android.DefaultAndroidInput$1: com.badlogic.gdx.backends.android.DefaultAndroidInput$KeyEvent newObject()
com.badlogic.gdx.backends.android.AndroidApplicationLogger: AndroidApplicationLogger()
com.badlogic.gdx.backends.android.AndroidApplication: void log(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.Texture: com.badlogic.gdx.graphics.TextureData getTextureData()
com.badlogic.gdx.utils.IntSet: java.lang.String toString()
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.graphics.Texture getTopObstacle()
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type[] values()
com.badlogic.gdx.math.Quaternion: java.lang.String toString()
com.badlogic.gdx.graphics.glutils.KTXTextureData: void consumeCustomData(int)
com.badlogic.gdx.utils.ObjectIntMap$Entries: com.badlogic.gdx.utils.ObjectIntMap$Entry next()
com.badlogic.gdx.graphics.GLTexture: int getTextureObjectHandle()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph()
com.badlogic.gdx.utils.ObjectMap: java.util.Iterator iterator()
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
com.badlogic.gdx.graphics.PixmapIO: com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.Cubemap: void clearAllCubemaps(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: boolean hasPKMHeader()
com.badlogic.gdx.backends.android.DefaultAndroidInput$SensorListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.badlogic.gdx.Graphics$BufferFormat: Graphics$BufferFormat(int,int,int,int,int,int,int,boolean)
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object removeIndex(int)
com.badlogic.gdx.graphics.Texture: void dispose()
com.badlogic.gdx.ApplicationAdapter: ApplicationAdapter()
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.backends.android.DefaultAndroidInput: float[] resize(float[])
com.badlogic.gdx.graphics.Texture: void load(com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.math.collision.Ray: boolean equals(java.lang.Object)
com.badlogic.gdx.math.Rectangle: Rectangle(float,float,float,float)
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Application$ApplicationType getType()
com.badlogic.gdx.ApplicationAdapter: void dispose()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void disableVertexAttribute(java.lang.String)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(float,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glBindFramebuffer(int,int)
com.badlogic.gdx.utils.BufferUtils: java.nio.ByteBuffer newDisposableByteBuffer(int)
com.badlogic.gdx.graphics.glutils.FileTextureData: int getWidth()
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float,int,int,float,int,boolean,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL20: void glTexParameteri(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBufferData(int,int,java.nio.Buffer,int)
com.badlogic.gdx.graphics.VertexAttribute: boolean equals(com.badlogic.gdx.graphics.VertexAttribute)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void invalidate()
com.badlogic.gdx.utils.StringBuilder: StringBuilder(int)
com.badlogic.gdx.backends.android.DefaultAndroidFiles: com.badlogic.gdx.files.FileHandle internal(java.lang.String)
com.badlogic.gdx.utils.IntSet: void addResize(int)
com.badlogic.gdx.utils.Array$ArrayIterable: java.util.Iterator iterator()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 crs(float,float,float)
com.badlogic.gdx.backends.android.AndroidApplication: void onConfigurationChanged(android.content.res.Configuration)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int createProgram()
com.badlogic.gdx.backends.android.AndroidGraphics: AndroidGraphics(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)
com.badlogic.gdx.utils.ObjectMap: int place(java.lang.Object)
com.badlogic.gdx.graphics.VertexAttributes: VertexAttributes(com.badlogic.gdx.graphics.VertexAttribute[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: void init(boolean,int,int)
com.badlogic.gdx.graphics.glutils.GLVersion$Type: GLVersion$Type(java.lang.String,int)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.backends.android.AndroidGL20: void glFramebufferTexture2D(int,int,int,int,int)
com.badlogic.gdx.utils.Array$ArrayIterator: java.util.Iterator iterator()
com.badlogic.gdx.backends.android.AndroidZipFileHandle: com.badlogic.gdx.files.FileHandle child(java.lang.String)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: void dispose()
com.badlogic.gdx.utils.reflect.ArrayReflection: java.lang.Object newInstance(java.lang.Class,int)
com.badlogic.gdx.graphics.glutils.ETC1: int getWidthPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.graphics.Mesh: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.utils.IntArray: int[] resize(int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(java.lang.String,int)
com.badlogic.gdx.utils.ObjectMap: int hashCode()
com.badlogic.gdx.utils.IntSet: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.glutils.IndexArray: void invalidate()
com.badlogic.gdx.files.FileHandle: java.lang.String name()
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean[] resize(boolean[])
com.badlogic.gdx.utils.Array: Array(int)
com.badlogic.gdx.utils.StringBuilder: void append0(char[],int,int)
com.badlogic.gdx.graphics.Texture: void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.backends.android.AndroidGraphics: void requestRendering()
com.badlogic.gdx.utils.Array: void addAll(java.lang.Object[],int,int)
com.badlogic.gdx.utils.IntArray: IntArray(int)
com.badlogic.gdx.backends.android.DefaultAndroidInput: void onResume()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1: boolean deleteSurroundingText(int,int)
com.badlogic.gdx.utils.StringBuilder: java.lang.Appendable append(java.lang.CharSequence)
com.badlogic.gdx.graphics.Mesh: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.utils.FloatArray: float[] resize(int)
com.mygdx.game.states.GameOverState: GameOverState(com.mygdx.game.states.GameStateManager)
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Audio getAudio()
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.files.FileHandle)
com.mygdx.game.states.LivesState: void render(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.graphics.Color: Color(float,float,float,float)
com.badlogic.gdx.backends.android.DefaultAndroidInput$SensorListener: DefaultAndroidInput$SensorListener(com.badlogic.gdx.backends.android.DefaultAndroidInput)
com.badlogic.gdx.graphics.Pixmap: int getGLInternalFormat()
com.badlogic.gdx.utils.Array: java.lang.Object peek()
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: java.lang.String toString()
com.badlogic.gdx.backends.android.AndroidTouchHandler: void postTouchEvent(com.badlogic.gdx.backends.android.DefaultAndroidInput,int,int,int,int,int,long)
com.badlogic.gdx.utils.ObjectMap$Entries: com.badlogic.gdx.utils.ObjectMap$Entry next()
com.badlogic.gdx.graphics.glutils.FileTextureData: void prepare()
com.badlogic.gdx.utils.IntSet: boolean contains(int)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 add(float,float)
com.badlogic.gdx.utils.Pool: void free(java.lang.Object)
com.badlogic.gdx.backends.android.DefaultAndroidInput$1: java.lang.Object newObject()
com.badlogic.gdx.utils.ObjectMap$MapIterator: ObjectMap$MapIterator(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: IndexBufferObject(boolean,int)
com.badlogic.gdx.graphics.Pixmap: void setColor(float,float,float,float)
com.badlogic.gdx.utils.ObjectIntMap: ObjectIntMap(int,float)
com.badlogic.gdx.utils.StringBuilder: void append0(java.lang.String)
com.badlogic.gdx.graphics.Mesh: void invalidateAllMeshes(com.badlogic.gdx.Application)
com.badlogic.gdx.math.Vector2: java.lang.String toString()
com.badlogic.gdx.backends.android.AndroidFileHandle: boolean isDirectory()
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Entries iterator()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: IndexBufferObjectSubData(boolean,int)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.Files$FileType type()
com.badlogic.gdx.utils.Array: Array(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.Pixmap: java.nio.ByteBuffer getPixels()
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type valueOf(java.lang.String)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: void onMeasure(int,int)
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean useMipMaps()
com.badlogic.gdx.utils.StringBuilder: void append0(java.lang.CharSequence,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glLinkProgram(int)
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean isManaged()
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean isBlendingEnabled()
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean onGenericMotion(android.view.View,android.view.MotionEvent)
com.badlogic.gdx.math.Vector2: Vector2()
com.badlogic.gdx.ApplicationAdapter: void resume()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int createBufferObject()
com.badlogic.gdx.utils.ObjectIntMap: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.String toString(java.lang.String,boolean)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawPixmap(long,long,int,int,int,int,int,int,int,int)
com.mygdx.game.sprites.Obstacle: void collidesSfx()
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter[] values()
com.badlogic.gdx.files.FileHandle: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void flush()
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.GlyphLayout draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float)
com.badlogic.gdx.assets.AssetLoaderParameters: AssetLoaderParameters()
com.badlogic.gdx.graphics.glutils.FileTextureData: java.lang.String toString()
com.badlogic.gdx.graphics.Texture: java.lang.String getManagedStatus()
com.mygdx.game.AndroidLauncher: AndroidLauncher()
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: GlyphLayout$GlyphRun()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.math.Frustum: Frustum()
com.badlogic.gdx.graphics.glutils.KTXTextureData: boolean disposePixmap()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.IndexArray: IndexArray(int)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
com.badlogic.gdx.utils.IntSet: int hashCode()
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object pop()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getGLFormat()
com.badlogic.gdx.graphics.g2d.SpriteBatch: SpriteBatch(int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.Cubemap: java.lang.String getManagedStatus()
com.badlogic.gdx.utils.IntArray: boolean equals(java.lang.Object)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean disposePixmap()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: void setGlyphRegion(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g2d.GlyphLayout: int parseColorMarkup(java.lang.CharSequence,int,int,com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: void clearAllFrameBuffers(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void setIndices(short[],int,int)
com.badlogic.gdx.math.Vector3: float len2()
com.badlogic.gdx.backends.android.AndroidTouchHandler: boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.files.FileHandle: boolean exists()
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1: AndroidVisibilityListener$1$1(com.badlogic.gdx.backends.android.AndroidVisibilityListener$1)
com.badlogic.gdx.utils.ObjectMap: void clear()
com.badlogic.gdx.utils.ObjectMap: ObjectMap()
com.badlogic.gdx.utils.ObjectIntMap$Entries: com.badlogic.gdx.utils.ObjectIntMap$Entries iterator()
com.badlogic.gdx.utils.Array: Array(boolean,int,java.lang.Class)
com.badlogic.gdx.graphics.g2d.GlyphLayout: GlyphLayout()
com.badlogic.gdx.graphics.glutils.ShaderProgram: ShaderProgram(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int loadShader(int,java.lang.String)
com.badlogic.gdx.backends.android.AndroidFileHandle: java.io.InputStream read()
com.badlogic.gdx.utils.SnapshotArray: void end()
com.badlogic.gdx.utils.Array$ArrayIterator: java.lang.Object next()
com.badlogic.gdx.utils.FloatArray: FloatArray()
com.badlogic.gdx.Graphics$BufferFormat: java.lang.String toString()
com.badlogic.gdx.backends.android.DefaultAndroidInput$2: java.lang.Object newObject()
com.badlogic.gdx.AbstractInput: void setCatchKey(int,boolean)
com.badlogic.gdx.graphics.VertexAttributes: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(float)
com.badlogic.gdx.backends.android.AndroidZipFileHandle: boolean exists()
com.badlogic.gdx.Graphics$DisplayMode: Graphics$DisplayMode(int,int,int,int)
com.badlogic.gdx.utils.IntArray: java.lang.String toString()
com.badlogic.gdx.backends.android.AndroidSound: void dispose()
com.badlogic.gdx.math.RandomXS128: void setState(long,long)
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Files getFiles()
com.badlogic.gdx.backends.android.AndroidMusic: void stop()
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int getKerning(char)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void unbindAttributes(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.backends.android.AndroidApplicationLogger: void log(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterator: boolean hasNext()
com.badlogic.gdx.graphics.VertexAttributes: java.lang.String toString()
com.badlogic.gdx.Input$Orientation: Input$Orientation(java.lang.String,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void compileShaders(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: boolean hasNext()
com.badlogic.gdx.graphics.Mesh: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.TextureRegion: int getRegionWidth()
com.badlogic.gdx.utils.SharedLibraryLoader: java.io.File extractFile(java.lang.String,java.lang.String,java.io.File)
com.badlogic.gdx.utils.Array: java.lang.Object get(int)
com.badlogic.gdx.utils.Array: com.badlogic.gdx.utils.Array with(java.lang.Object[])
com.badlogic.gdx.utils.ReflectionPool: ReflectionPool(java.lang.Class,int,int)
com.badlogic.gdx.graphics.Pixmap$Filter: Pixmap$Filter(java.lang.String,int)
com.badlogic.gdx.graphics.GLTexture: void delete()
com.badlogic.gdx.backends.android.AndroidGL20: int glCreateProgram()
com.badlogic.gdx.backends.android.AndroidVisibilityListener: void createListener(com.badlogic.gdx.backends.android.AndroidApplicationBase)
com.badlogic.gdx.utils.Array: java.lang.String toString()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void clear(long,int)
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.backends.android.AndroidApplication: void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidGL20: void glEnable(int)
com.badlogic.gdx.math.Matrix4: boolean inv(float[])
com.badlogic.gdx.graphics.Mesh: Mesh(com.badlogic.gdx.graphics.Mesh$VertexDataType,boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void setBlend(long,int)
com.badlogic.gdx.utils.ObjectMap$Entry: java.lang.String toString()
com.mygdx.game.states.LivesState: void timeSfx()
com.badlogic.gdx.math.Matrix4: float det(float[])
com.badlogic.gdx.backends.android.DefaultAndroidInput: void registerSensorListeners()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1: GLSurfaceView20$1(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20,android.view.View,boolean)
com.badlogic.gdx.backends.android.AndroidGL20: void glFramebufferRenderbuffer(int,int,int,int)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.TextureData$Factory: com.badlogic.gdx.graphics.TextureData loadFromFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: void reset()
com.badlogic.gdx.backends.android.AndroidGL20: int glGetAttribLocation(int,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL20: int glGetUniformLocation(int,java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterable: Array$ArrayIterable(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.backends.android.DefaultAndroidFiles: java.lang.String initExternalFilesPath(android.content.ContextWrapper)
com.badlogic.gdx.Graphics$DisplayMode: java.lang.String toString()
com.badlogic.gdx.files.FileHandle: int hashCode()
com.badlogic.gdx.files.FileHandle: long length()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void addText(com.badlogic.gdx.graphics.g2d.GlyphLayout,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glAttachShader(int,int)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: java.nio.ShortBuffer getBuffer()
com.badlogic.gdx.graphics.g2d.SpriteBatch: SpriteBatch()
com.badlogic.gdx.math.Rectangle: Rectangle()
com.badlogic.gdx.math.Quaternion: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getGLType()
com.badlogic.gdx.math.Quaternion: int hashCode()
com.badlogic.gdx.utils.Array: void addAll(com.badlogic.gdx.utils.Array,int,int)
com.badlogic.gdx.utils.SharedLibraryLoader: SharedLibraryLoader()
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteTexture(int)
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: ObjectIntMap$MapIterator(com.badlogic.gdx.utils.ObjectIntMap)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char)
com.mygdx.game.states.LivesState: void dispose()
com.badlogic.gdx.graphics.VertexAttribute: VertexAttribute(int,int,java.lang.String,int)
com.badlogic.gdx.graphics.glutils.GLVersion: GLVersion(com.badlogic.gdx.Application$ApplicationType,java.lang.String,java.lang.String,java.lang.String)
com.badlogic.gdx.utils.ObjectMap: ObjectMap(int,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: void remove()
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String)
com.mygdx.game.states.MenuState: MenuState(com.mygdx.game.states.GameStateManager)
com.badlogic.gdx.graphics.GLTexture: void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: VertexAttributes$ReadonlyIterator(java.lang.Object[])
com.badlogic.gdx.AbstractGraphics: AbstractGraphics()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float[],int,int)
com.badlogic.gdx.graphics.Mesh$VertexDataType: Mesh$VertexDataType(java.lang.String,int)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: ETC1TextureData(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.backends.android.AndroidApplication: void onActivityResult(int,int,android.content.Intent)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: void prepare()
com.badlogic.gdx.utils.ObjectMap$Entries: boolean hasNext()
com.badlogic.gdx.backends.android.AndroidMouseHandler: AndroidMouseHandler()
com.mygdx.game.states.MenuState: void update(float)
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.backends.android.AndroidGraphics: float getDeltaTime()
com.badlogic.gdx.utils.StringBuilder: int numChars(int,int)
com.badlogic.gdx.utils.Array: java.lang.Object first()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidAudio createAudio(android.content.Context,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.utils.ObjectMap: void resize(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetFloatv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.TextureArray: void invalidateAllTextureArrays(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.ETC1: int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.utils.ObjectIntMap: boolean containsKey(java.lang.Object)
com.badlogic.gdx.graphics.GLTexture: void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter)
com.badlogic.gdx.utils.IntSet: boolean add(int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void disableVertexAttribute(int)
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: void checkValidBuilder()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void checkManaged()
com.badlogic.gdx.graphics.g2d.BitmapFont: void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData)
com.badlogic.gdx.backends.android.AndroidGraphics: boolean checkGL20()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void end()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void invalidate()
com.badlogic.gdx.utils.ObjectIntMap: java.lang.String toString(java.lang.String,boolean)
com.badlogic.gdx.utils.ObjectMap$Entries: void remove()
com.badlogic.gdx.graphics.g2d.BitmapFont: java.lang.String toString()
com.badlogic.gdx.backends.android.AndroidGL20: void glGetProgramiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.glutils.KTXTextureData: void consumeCubemapData()
com.badlogic.gdx.utils.StringBuilder: int length()
com.badlogic.gdx.utils.SnapshotArray: void removeRange(int,int)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float)
com.badlogic.gdx.utils.FloatArray: float[] ensureCapacity(int)
com.badlogic.gdx.utils.SnapshotArray: boolean removeValue(java.lang.Object,boolean)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMap(int,com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.files.FileHandle: boolean isDirectory()
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType[] values()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: GLSurfaceView20$ConfigChooser(int,int,int,int,int,int)
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.mygdx.game.states.LivesState: void update(float)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.String,java.lang.Throwable)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int fetchUniformLocation(java.lang.String)
com.badlogic.gdx.math.RandomXS128: long nextLong(long)
com.badlogic.gdx.backends.android.AndroidGraphics: boolean isContinuousRendering()
com.badlogic.gdx.utils.Array: Array(java.lang.Class)
com.badlogic.gdx.ApplicationAdapter: void resize(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics$1: void run()
com.badlogic.gdx.graphics.Mesh: Mesh(com.badlogic.gdx.graphics.Mesh$VertexDataType,boolean,int,int,com.badlogic.gdx.graphics.VertexAttribute[])
com.badlogic.gdx.graphics.g2d.SpriteBatch: void begin()
com.badlogic.gdx.graphics.glutils.ETC1: com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: java.lang.String toString()
com.badlogic.gdx.utils.Array: void add(java.lang.Object)
com.badlogic.gdx.backends.android.DefaultAndroidInput: DefaultAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void invalidate()
com.badlogic.gdx.backends.android.AndroidGL30: void glGenVertexArrays(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.g2d.TextureRegion: int getRegionX()
com.badlogic.gdx.utils.Pool: void reset(java.lang.Object)
com.badlogic.gdx.backends.android.AndroidApplication: void onPause()
com.badlogic.gdx.graphics.OrthographicCamera: void update(boolean)
com.badlogic.gdx.utils.reflect.ReflectionException: ReflectionException(java.lang.String,java.lang.Throwable)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: int getHeight()
com.badlogic.gdx.graphics.Texture$1: Texture$1(int)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.backends.android.AndroidApplication: android.widget.FrameLayout$LayoutParams createLayoutParams()
com.mygdx.game.states.PlayState: void updateGround()
com.badlogic.gdx.utils.StreamUtils: void closeQuietly(java.io.Closeable)
com.badlogic.gdx.utils.BufferUtils: java.nio.IntBuffer newIntBuffer(int)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: GdxEglConfigChooser(int,int,int,int,int,int,int)
com.badlogic.gdx.math.RandomXS128: void setSeed(long)
com.badlogic.gdx.graphics.glutils.IndexArray: int getNumMaxIndices()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
com.badlogic.gdx.backends.android.AndroidGraphics: void logConfig(javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String)
com.badlogic.gdx.backends.android.AndroidGraphics: int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
com.badlogic.gdx.graphics.OrthographicCamera: void setToOrtho(boolean,float,float)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean disposePixmap()
com.badlogic.gdx.backends.android.AndroidApplication: android.content.Context getContext()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void draw(com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.math.Vector3: Vector3()
com.badlogic.gdx.backends.android.AndroidZipFileHandle: android.content.res.AssetFileDescriptor getAssetFileDescriptor()
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.backends.android.DefaultAndroidInput: int getFreePointerIndex()
com.badlogic.gdx.graphics.g2d.BitmapFont: void dispose()
com.badlogic.gdx.AbstractInput: AbstractInput()
com.mygdx.game.states.PlayState: PlayState(com.mygdx.game.states.GameStateManager)
com.badlogic.gdx.backends.android.AndroidGL30: void glDrawArraysInstanced(int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void setBlend(int)
com.badlogic.gdx.backends.android.AndroidSound: long play(float)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: VertexBufferObject(boolean,int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFontCache newFontCache()
com.badlogic.gdx.math.Plane: java.lang.String toString()
com.badlogic.gdx.net.NetJavaImpl$1: java.lang.Thread newThread(java.lang.Runnable)
com.badlogic.gdx.utils.Array: int hashCode()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: int getWidth()
com.badlogic.gdx.graphics.glutils.GLVersion: int parseInt(java.lang.String,int)
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: java.util.Iterator iterator()
com.badlogic.gdx.graphics.TextureArray: boolean isManaged()
com.badlogic.gdx.utils.FloatArray: void add(float)
com.badlogic.gdx.files.FileHandle: java.lang.String path()
com.badlogic.gdx.backends.android.AndroidGraphics: AndroidGraphics(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidZipFileHandle: boolean isDirectory()
com.badlogic.gdx.backends.android.AndroidZipFileHandle: java.lang.String getPath()
com.badlogic.gdx.backends.android.AndroidFileHandle: AndroidFileHandle(android.content.res.AssetManager,java.io.File,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.backends.android.AndroidGraphics: void updateSafeAreaInsets()
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color clamp()
com.badlogic.gdx.utils.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])
com.badlogic.gdx.backends.android.AndroidApplicationLogger: void log(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.utils.Array: java.lang.Object pop()
com.badlogic.gdx.files.FileHandle: java.io.File file()
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean isPrepared()
com.badlogic.gdx.graphics.glutils.KTXTextureData: boolean isManaged()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getWidth()
com.badlogic.gdx.utils.StringBuilder: void appendNull()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(java.lang.Object)
com.mygdx.game.states.GameStateManager: void set(com.mygdx.game.states.State)
com.badlogic.gdx.math.Rectangle: boolean overlaps(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType valueOf(java.lang.String)
com.badlogic.gdx.utils.FloatArray: float get(int)
com.badlogic.gdx.utils.SharedLibraryLoader: void setLoaded(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void clearAllShaderPrograms(com.badlogic.gdx.Application)
com.badlogic.gdx.utils.ObjectIntMap: void put(java.lang.Object,int)
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.Throwable)
com.badlogic.gdx.math.Rectangle: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void dispose()
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String getLog()
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format[] values()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void invalidate()
com.badlogic.gdx.math.Rectangle: int hashCode()
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType valueOf(java.lang.String)
com.badlogic.gdx.graphics.glutils.IndexArray: java.nio.ShortBuffer getBuffer()
com.badlogic.gdx.graphics.VertexAttributes: long getMask()
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: java.lang.String toString()
com.badlogic.gdx.math.Vector3: Vector3(float,float,float)
com.badlogic.gdx.backends.android.AndroidGraphics: android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser()
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Entries entries()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void setVertices(float[],int,int)
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.GLFrameBuffer)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void unbind()
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.String crc(java.io.InputStream)
com.badlogic.gdx.graphics.glutils.KTXTextureData: int getWidth()
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation valueOf(java.lang.String)
com.badlogic.gdx.backends.android.AndroidMusic: void pause()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
com.badlogic.gdx.utils.Array: void truncate(int)
com.mygdx.game.sprites.Obstacle: void reposition(float)
com.badlogic.gdx.graphics.VertexAttributes: com.badlogic.gdx.graphics.VertexAttribute get(int)
com.badlogic.gdx.utils.Array$ArrayIterator: com.badlogic.gdx.utils.Array$ArrayIterator iterator()
com.badlogic.gdx.backends.android.DefaultAndroidInput$2: com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent newObject()
com.badlogic.gdx.backends.android.AndroidApplication: android.view.Window getApplicationWindow()
com.badlogic.gdx.backends.android.AndroidApplication: android.os.Handler getHandler()
com.badlogic.gdx.graphics.glutils.ETC1: boolean isValidPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.graphics.OrthographicCamera: OrthographicCamera()
com.mygdx.game.states.State: State(com.mygdx.game.states.GameStateManager)
com.badlogic.gdx.backends.android.AndroidGL20: int glCheckFramebufferStatus(int)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void setUsage(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)
com.badlogic.gdx.utils.Array$ArrayIterable: Array$ArrayIterable(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.Pixmap: Pixmap(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.ObjectIntMap: int hashCode()
com.badlogic.gdx.utils.IntSet: void resize(int)
com.badlogic.gdx.ApplicationAdapter: void pause()
com.badlogic.gdx.graphics.VertexAttributes: int compareTo(java.lang.Object)
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object get(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter[] values()
com.badlogic.gdx.utils.reflect.Constructor: void setAccessible(boolean)
com.badlogic.gdx.graphics.Texture: java.lang.String toString()
com.badlogic.gdx.graphics.VertexAttributes: int calculateOffsets()
com.mygdx.game.states.PlayState: void render(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String getManagedStatus()
com.badlogic.gdx.graphics.Texture$TextureWrap: int getGLEnum()
com.badlogic.gdx.graphics.glutils.GLVersion: void extractVersion(java.lang.String,java.lang.String)
com.mygdx.game.FlappyMan: void dispose()
com.badlogic.gdx.backends.android.AndroidGraphics: boolean isGL30Available()
com.badlogic.gdx.utils.ObjectMap$Entries: ObjectMap$Entries(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.Array: java.lang.Object[] ensureCapacity(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glGenerateMipmap(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: GLSurfaceView20(android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,int)
com.badlogic.gdx.graphics.Pixmap$Format: int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniformMatrix4fv(int,int,boolean,float[],int)
com.badlogic.gdx.utils.ObjectIntMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.StringBuilder: java.lang.CharSequence subSequence(int,int)
com.badlogic.gdx.utils.IntArray: void add(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteFramebuffer(int)
com.badlogic.gdx.math.Frustum: void update(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.utils.StringBuilder: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.glutils.GLFrameBuffer$FrameBufferTextureAttachmentSpec: boolean isColorTexture()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.utils.Array: boolean equals(java.lang.Object)
com.badlogic.gdx.backends.android.DefaultAndroidFiles: java.lang.String getExternalStoragePath()
com.badlogic.gdx.graphics.glutils.KTXTextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String)
com.badlogic.gdx.math.Plane: Plane(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetIntegerv(int,java.nio.IntBuffer)
com.badlogic.gdx.utils.StringBuilder: int hashCode()
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(int)
com.badlogic.gdx.utils.Array: boolean removeValue(java.lang.Object,boolean)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getFormat()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void requireGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: Gdx2DPixmap(int,int,int)
com.badlogic.gdx.backends.android.DefaultAndroidInput: void unregisterSensorListeners()
com.mygdx.game.sprites.Obstacle: void dispose()
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object[] begin()
com.badlogic.gdx.utils.IntArray: void clear()
com.mygdx.game.sprites.Superman: void update(float)
com.badlogic.gdx.graphics.glutils.FileTextureData: void consumeCustomData(int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void addToCache(com.badlogic.gdx.graphics.g2d.GlyphLayout,float,float)
com.badlogic.gdx.utils.Array: java.lang.Object removeIndex(int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: boolean isWhitespace(char)
com.badlogic.gdx.graphics.Color: int hashCode()
com.badlogic.gdx.utils.SharedLibraryLoader: void loadFile(java.lang.String)
com.badlogic.gdx.utils.IntArray: int hashCode()
com.badlogic.gdx.utils.IntArray: void insert(int,int)
com.badlogic.gdx.backends.android.AndroidMusic$1: void run()
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.String mapLibraryName(java.lang.String)
com.badlogic.gdx.graphics.Color: int toIntBits()
com.badlogic.gdx.math.Vector3: java.lang.String toString()
com.badlogic.gdx.backends.android.AndroidGL30: void glDrawBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void clear()
com.badlogic.gdx.math.Vector3: int hashCode()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.files.FileHandle: int estimateLength()
com.badlogic.gdx.utils.StringBuilder: void append0(char)
com.badlogic.gdx.utils.BufferUtils: java.nio.ByteBuffer newUnsafeByteBuffer(int)
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle child(java.lang.String)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.utils.Array: void clear()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: int getWrapIndex(com.badlogic.gdx.utils.Array,int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void setIndices(short[],int,int)
com.mygdx.game.states.PlayState: void initialize()
com.badlogic.gdx.utils.ObjectMap$Entry: ObjectMap$Entry()
com.badlogic.gdx.graphics.g2d.GlyphLayout: void setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)
com.badlogic.gdx.utils.reflect.Constructor: Constructor(java.lang.reflect.Constructor)
com.badlogic.gdx.backends.android.DefaultAndroidAudio: void notifyMusicDisposed(com.badlogic.gdx.backends.android.AndroidMusic)
com.badlogic.gdx.backends.android.AndroidGL20: int glGenBuffer()
com.badlogic.gdx.utils.ObjectMap$Keys: void remove()
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMapGLES20(int,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.backends.android.DefaultAndroidInput: void setKeyboardAvailable(boolean)
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType[] values()
com.badlogic.gdx.backends.android.AndroidGraphics: void onPauseGLSurfaceView()
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean justTouched()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void invalidate()
com.badlogic.gdx.utils.SharedLibraryLoader: java.io.InputStream readFile(java.lang.String)
com.badlogic.gdx.graphics.Colors: com.badlogic.gdx.graphics.Color get(java.lang.String)
com.badlogic.gdx.backends.android.AndroidMouseHandler: boolean onGenericMotion(android.view.MotionEvent,com.badlogic.gdx.backends.android.DefaultAndroidInput)
com.badlogic.gdx.graphics.VertexAttribute: int hashCode()
com.badlogic.gdx.backends.android.AndroidGraphics: void clearManagedCaches()
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics: void destroy()
com.badlogic.gdx.utils.ObjectMap: java.lang.String toString()
com.badlogic.gdx.graphics.TextureArray: void reload()
com.badlogic.gdx.graphics.Texture$TextureFilter: Texture$TextureFilter(java.lang.String,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.AndroidMusic: boolean isPlaying()
com.badlogic.gdx.math.collision.Ray: Ray()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Net getNet()
com.badlogic.gdx.backends.android.AndroidApplication: void createWakeLock(boolean)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void bindData(com.badlogic.gdx.graphics.GL20)
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType[] values()
com.badlogic.gdx.utils.ObjectIntMap$Entry: ObjectIntMap$Entry()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidFiles createFiles()
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: BitmapFont$Glyph()
com.badlogic.gdx.graphics.Colors: void reset()
com.badlogic.gdx.backends.android.AndroidGL20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void setBuffer(java.nio.Buffer,boolean,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)
com.badlogic.gdx.backends.android.AndroidZipFileHandle: com.badlogic.gdx.files.FileHandle parent()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: BitmapFontCache(com.badlogic.gdx.graphics.g2d.BitmapFont,boolean)
com.badlogic.gdx.backends.android.AndroidMusic$1: AndroidMusic$1(com.badlogic.gdx.backends.android.AndroidMusic)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: java.nio.ShortBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.KTXTextureData: boolean isPrepared()
com.badlogic.gdx.graphics.VertexAttributes: int size()
com.badlogic.gdx.utils.StringBuilder: char charAt(int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setVertexAttribute(int,int,int,boolean,int,int)
com.badlogic.gdx.utils.Array: Array(boolean,int)
com.badlogic.gdx.utils.Array$ArrayIterator: Array$ArrayIterator(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int getAttributeLocation(java.lang.String)
com.badlogic.gdx.backends.android.DefaultAndroidInput$1: DefaultAndroidInput$1(com.badlogic.gdx.backends.android.DefaultAndroidInput,int,int)
com.badlogic.gdx.utils.StreamUtils: byte[] copyStreamToByteArray(java.io.InputStream,int)
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion()
com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)
com.badlogic.gdx.utils.IntSet: boolean remove(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.DefaultAndroidInput$KeyEvent: DefaultAndroidInput$KeyEvent()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
com.mygdx.game.sprites.Animation: Animation(com.badlogic.gdx.graphics.g2d.TextureRegion,int,float)
com.badlogic.gdx.utils.Array: com.badlogic.gdx.utils.Array$ArrayIterator iterator()
com.badlogic.gdx.backends.android.AndroidGL20: void glCompileShader(int)
com.badlogic.gdx.graphics.glutils.KTXTextureData: void prepare()
com.badlogic.gdx.utils.FloatArray: int hashCode()
com.badlogic.gdx.graphics.glutils.IndexArray: void unbind()
com.badlogic.gdx.backends.android.DefaultAndroidFiles: java.lang.String getLocalStoragePath()
com.badlogic.gdx.utils.ObjectMap: void putResize(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: boolean equals(java.lang.Object)
com.badlogic.gdx.AbstractInput: boolean isCatchKey(int)
com.badlogic.gdx.utils.Pool: Pool()
com.badlogic.gdx.utils.StringBuilder: StringBuilder()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 set(float,float)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.graphics.g2d.GlyphLayout: void reset()
com.badlogic.gdx.graphics.Pixmap: int getGLFormat()
com.badlogic.gdx.backends.android.AndroidApplication: void useImmersiveMode(boolean)
com.badlogic.gdx.utils.ObjectIntMap: ObjectIntMap()
com.badlogic.gdx.utils.ObjectMap$Entries: com.badlogic.gdx.utils.ObjectMap$Entries iterator()
com.badlogic.gdx.utils.ObjectIntMap: int place(java.lang.Object)
com.mygdx.game.sprites.Obstacle: Obstacle(float)
com.badlogic.gdx.utils.ObjectIntMap$Entries: ObjectIntMap$Entries(com.badlogic.gdx.utils.ObjectIntMap)
com.badlogic.gdx.graphics.Mesh: void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int)
com.badlogic.gdx.graphics.VertexAttribute: VertexAttribute(int,int,java.lang.String)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMapCPU(int,com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.backends.android.DefaultAndroidAudio: void resume()
com.badlogic.gdx.graphics.Pixmap: int getWidth()
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType[] values()
com.badlogic.gdx.backends.android.AndroidApplication: void log(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.graphics.Color: void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
com.badlogic.gdx.graphics.g2d.TextureRegion: com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.Color: Color()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void bufferChanged()
com.badlogic.gdx.utils.ReflectionPool: java.lang.Object newObject()
com.badlogic.gdx.backends.android.AndroidGraphics: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)
com.badlogic.gdx.graphics.GLTexture: void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
com.badlogic.gdx.backends.android.AndroidGL20: void glBlendFuncSeparate(int,int,int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(int,int)
com.badlogic.gdx.utils.SharedLibraryLoader: void load(java.lang.String)
com.badlogic.gdx.backends.android.AndroidApplication$1: AndroidApplication$1(com.badlogic.gdx.backends.android.AndroidApplication)
com.badlogic.gdx.utils.ObjectMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.IntArray: IntArray()
com.badlogic.gdx.utils.Array$ArrayIterator: void remove()
com.badlogic.gdx.backends.android.AndroidApplication: void onWindowFocusChanged(boolean)
com.badlogic.gdx.backends.android.AndroidGraphics: void onResumeGLSurfaceView()
com.badlogic.gdx.backends.android.AndroidGraphics: void updatePpi()
com.badlogic.gdx.backends.android.AndroidGL20: void glBufferSubData(int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
com.badlogic.gdx.backends.android.DefaultAndroidFiles: com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void bufferChanged()
com.badlogic.gdx.backends.android.DefaultAndroidInput$TouchEvent: DefaultAndroidInput$TouchEvent()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void setVertices(float[],int,int)
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.badlogic.gdx.utils.FloatArray: void removeRange(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: GLSurfaceView20$ContextFactory()
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap[] values()
com.badlogic.gdx.graphics.Color: float toFloatBits()
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray(java.lang.Class)
com.badlogic.gdx.backends.android.AndroidMusic: void onCompletion(android.media.MediaPlayer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetShaderiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph)
com.badlogic.gdx.backends.android.AndroidTouchHandler: AndroidTouchHandler()
com.badlogic.gdx.graphics.Texture$TextureFilter: int getGLEnum()
com.badlogic.gdx.backends.android.DefaultAndroidAudio: void dispose()
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream: StreamUtils$OptimizedByteArrayOutputStream(int)
com.badlogic.gdx.utils.BufferUtils: void freeMemory(java.nio.ByteBuffer)
com.badlogic.gdx.graphics.PixmapIO$CIM: com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream: byte[] toByteArray()
com.badlogic.gdx.graphics.glutils.KTXTextureData: boolean useMipMaps()
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.String)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int getNumMaxIndices()
com.badlogic.gdx.math.RandomXS128: long murmurHash3(long)
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType[] values()
com.badlogic.gdx.graphics.glutils.VertexArray: VertexArray(int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.utils.FloatArray: void addAll(float[],int,int)
com.badlogic.gdx.utils.reflect.Constructor: java.lang.Class getDeclaringClass()
com.badlogic.gdx.utils.StringBuilder: java.lang.Appendable append(char)
com.badlogic.gdx.backends.android.AndroidGraphics: int getHeight()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegion(float,float,float,float)
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: void build()
com.badlogic.gdx.utils.ObjectMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.badlogic.gdx.backends.android.AndroidMouseHandler: void postTouchEvent(com.badlogic.gdx.backends.android.DefaultAndroidInput,int,int,int,int,int,long)
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter()
com.badlogic.gdx.utils.Array: java.lang.Object[] resize(int)
com.badlogic.gdx.graphics.Pixmap: int getGLType()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 idt()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.lang.String getFormatString(int)
com.badlogic.gdx.utils.NumberUtils: int floatToIntBits(float)
com.badlogic.gdx.backends.android.AndroidZipFileHandle: AndroidZipFileHandle(java.io.File,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: java.lang.String toString()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.SnapshotArray getLifecycleListeners()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean isPrepared()
com.badlogic.gdx.utils.ObjectMap$Keys: void reset()
com.badlogic.gdx.backends.android.AndroidClipboard: AndroidClipboard(android.content.Context)
com.badlogic.gdx.graphics.Mesh: void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int,boolean)
com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.graphics.GLTexture: GLTexture(int,int)
com.badlogic.gdx.utils.ObjectIntMap: int get(java.lang.Object,int)
com.badlogic.gdx.utils.FloatArray: void addAll(com.badlogic.gdx.utils.FloatArray,int,int)
com.mygdx.game.states.LivesState: LivesState(com.mygdx.game.states.GameStateManager,int,int)
com.badlogic.gdx.utils.ObjectMap$MapIterator: void remove()
com.badlogic.gdx.backends.android.AndroidMusic: void dispose()
com.badlogic.gdx.utils.ObjectMap: java.lang.Object remove(java.lang.Object)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setupMatrices()
com.badlogic.gdx.graphics.Cubemap: void invalidateAllCubemaps(com.badlogic.gdx.Application)
com.badlogic.gdx.utils.Pool: java.lang.Object obtain()
com.badlogic.gdx.utils.ObjectMap$MapIterator: void reset()
com.mygdx.game.sprites.Superman: void dispose()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float)
com.badlogic.gdx.utils.BufferUtils: java.nio.ByteBuffer newByteBuffer(int)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object get(java.lang.Object)
com.badlogic.gdx.backends.android.AndroidGraphics: void logManagedCachesStatus()
com.badlogic.gdx.backends.android.AndroidGL20: void glDrawElements(int,int,int,java.nio.Buffer)
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation[] values()
com.badlogic.gdx.utils.Pools: com.badlogic.gdx.utils.Pool get(java.lang.Class,int)
com.badlogic.gdx.graphics.glutils.KTXTextureData: int getHeight()
com.badlogic.gdx.math.collision.Ray: Ray(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4)
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.graphics.Texture getBottomObstacle()
com.badlogic.gdx.backends.android.AndroidGL20: void glDepthMask(boolean)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion idt()
com.mygdx.game.sprites.Animation: com.badlogic.gdx.graphics.g2d.TextureRegion getFrame()
com.badlogic.gdx.backends.android.AndroidApplication: void onResume()
com.badlogic.gdx.utils.Array: Array(java.lang.Object[])
com.mygdx.game.sprites.Superman: com.badlogic.gdx.math.Rectangle getBounds()
com.badlogic.gdx.utils.ObjectIntMap$Entries: void remove()
com.badlogic.gdx.backends.android.AndroidGL20: void glTexParameterf(int,int,float)
com.badlogic.gdx.files.FileHandle: java.lang.String nameWithoutExtension()
com.badlogic.gdx.utils.Pool: void freeAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int getNumIndices()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer load(long[],byte[],int,int)
com.badlogic.gdx.math.Matrix4: void mul(float[],float[])
com.mygdx.game.sprites.Superman: void setPosition(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.utils.StringBuilder: void enlargeBuffer(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void bind()
com.mygdx.game.states.LivesState: void handleInput()
com.badlogic.gdx.graphics.Cubemap: boolean isManaged()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void free(long)
com.badlogic.gdx.backends.android.AndroidApplication: void hideStatusBar(boolean)
com.badlogic.gdx.graphics.glutils.VertexArray: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter: CubemapLoader$CubemapParameter()
com.badlogic.gdx.graphics.Texture: void clearAllTextures(com.badlogic.gdx.Application)
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isLoaded(java.lang.String)
com.badlogic.gdx.utils.Array: void addAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: GLFrameBuffer()
com.badlogic.gdx.math.MathUtils: int nextPowerOfTwo(int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void clear(int)
com.mygdx.game.states.GameOverState: void handleInput()
com.badlogic.gdx.graphics.GLTexture: void bind()
com.badlogic.gdx.graphics.glutils.IndexArray: int getNumIndices()
com.badlogic.gdx.graphics.Pixmap: void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.backends.android.AndroidGL20: int glGenFramebuffer()
com.badlogic.gdx.math.collision.Ray: java.lang.String toString()
com.badlogic.gdx.graphics.VertexAttribute: VertexAttribute(int,int,int,boolean,java.lang.String,int)
com.badlogic.gdx.graphics.Pixmap$Blending: Pixmap$Blending(java.lang.String,int)
com.badlogic.gdx.utils.ObjectIntMap$Entries: void reset()
com.badlogic.gdx.utils.IntArray: int get(int)
com.badlogic.gdx.net.NetJavaImpl$1: NetJavaImpl$1(com.badlogic.gdx.net.NetJavaImpl)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float)
com.mygdx.game.FlappyMan: void render()
com.badlogic.gdx.math.RandomXS128: int nextInt(int)
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.math.Vector2 getPosTopObstacle()
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetProgramInfoLog(int)
com.badlogic.gdx.math.MathUtils: boolean isPowerOfTwo(int)
com.badlogic.gdx.Input$OnscreenKeyboardType: Input$OnscreenKeyboardType(java.lang.String,int)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle child(java.lang.String)
com.badlogic.gdx.math.Matrix4: void prj(float[],float[],int,int,int)
com.badlogic.gdx.math.Matrix4: Matrix4()
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
com.mygdx.game.states.GameOverState: void overSfx()
com.badlogic.gdx.backends.android.AndroidGraphics: void preserveEGLContextOnPause()
com.badlogic.gdx.graphics.glutils.VertexArray: void setVertices(float[],int,int)
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.Throwable loadFile(java.lang.String,java.lang.String,java.io.File)
com.badlogic.gdx.graphics.Mesh: java.nio.ShortBuffer getIndicesBuffer()
com.badlogic.gdx.utils.IntSet: IntSet()
com.badlogic.gdx.backends.android.DefaultAndroidAudio: void pause()
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: java.lang.String getManagedStatus()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: boolean checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int linkProgram(int)
com.badlogic.gdx.graphics.Texture: int getWidth()
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFileHandle: boolean exists()
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean onTouch(android.view.View,android.view.MotionEvent)
com.badlogic.gdx.backends.android.DefaultAndroidFiles: com.badlogic.gdx.files.FileHandle getZipFileHandleIfExists(com.badlogic.gdx.files.FileHandle,java.lang.String)
com.badlogic.gdx.backends.android.AndroidVisibilityListener: AndroidVisibilityListener()
com.badlogic.gdx.utils.ObjectMap$Keys: java.lang.Object next()
com.badlogic.gdx.math.RandomXS128: RandomXS128()
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun: void reset()
com.badlogic.gdx.graphics.Texture: void reload()
com.badlogic.gdx.utils.FloatArray: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.backends.android.DefaultAndroidInput$2: DefaultAndroidInput$2(com.badlogic.gdx.backends.android.DefaultAndroidInput,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glBindVertexArray(int)
com.badlogic.gdx.utils.ObjectMap$Keys: java.util.Iterator iterator()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.Camera: Camera()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: boolean isBreakChar(char)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh setVertices(float[],int,int)
com.badlogic.gdx.graphics.VertexAttributes: java.util.Iterator iterator()
com.badlogic.gdx.utils.FloatArray: void truncate(int)
com.badlogic.gdx.utils.Pool: void discard(java.lang.Object)
com.badlogic.gdx.math.Matrix4: java.lang.String toString()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void unbind()
com.badlogic.gdx.graphics.Cubemap$1: Cubemap$1(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glRenderbufferStorage(int,int,int,int)
com.badlogic.gdx.utils.ObjectMap$Keys: boolean hasNext()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void fetchAttributes()
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetString(int)
com.badlogic.gdx.utils.IntArray: IntArray(boolean,int)
com.badlogic.gdx.utils.Array: java.util.Iterator iterator()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.lang.String getFailureReason()
com.badlogic.gdx.graphics.Texture: void invalidateAllTextures(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void bindAttributes(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.backends.android.AndroidGL20: void glDisable(int)
com.badlogic.gdx.backends.android.AndroidGL20: AndroidGL20()
com.badlogic.gdx.graphics.glutils.KTXTextureData: KTXTextureData(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.math.Quaternion: Quaternion()
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: java.lang.StringBuilder getManagedStatus(java.lang.StringBuilder)
com.badlogic.gdx.utils.Pools: com.badlogic.gdx.utils.Pool get(java.lang.Class)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.backends.android.DefaultAndroidInput: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.AndroidGL30: AndroidGL30()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: java.util.Iterator iterator()
com.badlogic.gdx.backends.android.AndroidNet: AndroidNet(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.graphics.OrthographicCamera: void update()
com.badlogic.gdx.backends.android.AndroidGL20: void glPixelStorei(int,int)
com.badlogic.gdx.graphics.TextureData$TextureDataType: TextureData$TextureDataType(java.lang.String,int)
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetShaderInfoLog(int)
com.badlogic.gdx.utils.NumberUtils: int floatToRawIntBits(float)
com.badlogic.gdx.utils.IntArray: int pop()
com.badlogic.gdx.graphics.glutils.ShaderProgram: int fetchAttributeLocation(java.lang.String)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer getPixels()
com.mygdx.game.states.GameStateManager: GameStateManager()
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteRenderbuffer(int)
com.badlogic.gdx.math.collision.Ray: int hashCode()
com.badlogic.gdx.math.Vector3: float dot(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.utils.ObjectMap$Entries: java.lang.Object next()
com.badlogic.gdx.backends.android.AndroidGL20: int glCreateShader(int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void requirePageGlyphs(int,int)
com.badlogic.gdx.backends.android.DefaultAndroidAudio: DefaultAndroidAudio(android.content.Context,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidSound: AndroidSound(android.media.SoundPool,android.media.AudioManager,int)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(float,float,float)
com.mygdx.game.states.MenuState: void dispose()
com.badlogic.gdx.utils.BufferUtils: void copyJni(float[],java.nio.Buffer,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.mygdx.game.sprites.Superman: com.badlogic.gdx.math.Vector3 getPosition()
com.mygdx.game.states.PlayState: void dispose()
com.badlogic.gdx.graphics.GLTexture: float getMaxAnisotropicFilterLevel()
com.badlogic.gdx.files.FileHandle: java.lang.String toString()
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(char)
com.mygdx.game.states.PlayState: void pass()
com.badlogic.gdx.graphics.Color: Color(int)
com.badlogic.gdx.backends.android.DefaultAndroidAudio: com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Constructor getDeclaredConstructor(java.lang.Class,java.lang.Class[])
com.badlogic.gdx.backends.android.AndroidGraphics: void resume()
com.badlogic.gdx.Application$ApplicationType: Application$ApplicationType(java.lang.String,int)
com.mygdx.game.states.GameStateManager: void update(float)
com.mygdx.game.states.MenuState: void handleInput()
com.badlogic.gdx.backends.android.AndroidGraphics$1: AndroidGraphics$1(com.badlogic.gdx.backends.android.AndroidGraphics)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void setVertices(float[],int,int)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 nor()
com.badlogic.gdx.backends.android.DefaultAndroidInput: void processEvents()
com.badlogic.gdx.math.RandomXS128: void nextBytes(byte[])
com.badlogic.gdx.backends.android.AndroidApplication: void onDestroy()
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttribPointer(int,int,int,boolean,int,int)
com.badlogic.gdx.graphics.Cubemap: void reload()
com.badlogic.gdx.utils.StringBuilder: java.lang.String substring(int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer newPixmap(long[],int,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void invalidateAllShaderPrograms(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.graphics.Texture: boolean isManaged()
com.badlogic.gdx.files.FileHandle: FileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float)
com.badlogic.gdx.utils.ObjectMap$Keys: com.badlogic.gdx.utils.ObjectMap$Keys iterator()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int getNumIndices()
com.badlogic.gdx.graphics.glutils.VertexArray: void invalidate()
com.badlogic.gdx.graphics.Mesh: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.utils.ObjectMap: int locateKey(java.lang.Object)
com.badlogic.gdx.graphics.glutils.KTXTextureData: void disposePreparedData()
com.badlogic.gdx.graphics.Mesh: void clearAllMeshes(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.KTXTextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.utils.ObjectIntMap$Entries: java.lang.Object next()
com.badlogic.gdx.backends.android.AndroidApplication: void postRunnable(java.lang.Runnable)
com.mygdx.game.sprites.Animation: void update(float)
com.badlogic.gdx.graphics.Pixmap: void fill()
com.badlogic.gdx.files.FileHandle: FileHandle()
com.badlogic.gdx.math.Quaternion: Quaternion(float,float,float,float)
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegion(int,int,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: void getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph)
com.badlogic.gdx.utils.StreamUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle parent()
com.badlogic.gdx.graphics.Texture: Texture(int,int,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean isCompiled()
com.mygdx.game.FlappyMan: void create()
com.badlogic.gdx.backends.android.AndroidGL20: void glBindRenderbuffer(int,int)
com.badlogic.gdx.math.RandomXS128: long nextLong()
com.badlogic.gdx.math.Vector2: Vector2(float,float)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int)
com.mygdx.game.states.PlayState: PlayState(com.mygdx.game.states.GameStateManager,int,int)
com.badlogic.gdx.files.FileHandle: java.lang.String extension()
com.mygdx.game.sprites.Obstacle: void move()
com.badlogic.gdx.graphics.g2d.GlyphLayout: void adjustLastGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun)
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.Graphics$DisplayMode getDisplayMode()
com.badlogic.gdx.math.Vector2: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int toGlFormat(int)
com.badlogic.gdx.math.RandomXS128: float nextFloat()
com.badlogic.gdx.graphics.glutils.GLFrameBuffer: void invalidateAllFrameBuffers(com.badlogic.gdx.Application)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(float,float,float,float)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh setIndices(short[])
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array getRunnables()
com.badlogic.gdx.backends.android.AndroidGraphics: void setContinuousRendering(boolean)
com.badlogic.gdx.graphics.glutils.GLVersion: int getMajorVersion()
com.badlogic.gdx.utils.ObjectIntMap: void resize(int)
com.badlogic.gdx.Files$FileType: Files$FileType(java.lang.String,int)
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode: AndroidGraphics$AndroidDisplayMode(com.badlogic.gdx.backends.android.AndroidGraphics,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void enableVertexAttribute(int)
com.mygdx.game.FlappyMan: FlappyMan()
com.badlogic.gdx.backends.android.AndroidGraphics: void setupGL(javax.microedition.khronos.opengles.GL10)
com.badlogic.gdx.utils.Pool: Pool(int,int)
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String)
com.badlogic.gdx.math.MathUtils: boolean isEqual(float,float,float)
com.badlogic.gdx.utils.ObjectIntMap: void putResize(java.lang.Object,int)
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy: FillResolutionStrategy()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void bufferChanged()
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension: ResolutionStrategy$MeasuredDimension(int,int)
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String)
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidInput createInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int createBufferObject()
com.badlogic.gdx.utils.SnapshotArray: void truncate(int)
com.badlogic.gdx.utils.ReflectionPool: com.badlogic.gdx.utils.reflect.Constructor findConstructor(java.lang.Class)
com.badlogic.gdx.graphics.VertexAttribute: int getSizeInBytes()
com.badlogic.gdx.graphics.g2d.GlyphLayout: void truncate(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,float,java.lang.String,int,com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.backends.android.AndroidApplication: void error(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: void onDetachedFromWindow()
com.badlogic.gdx.backends.android.AndroidTouchHandler: int toGdxButton(int)
com.badlogic.gdx.backends.android.AndroidApplication$1: void pause()
com.badlogic.gdx.utils.Pools: void freeAll(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.backends.android.AndroidGL20: void glUseProgram(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBindTexture(int,int)
com.badlogic.gdx.backends.android.AndroidGraphics: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.utils.BufferUtils: void disposeUnsafeByteBuffer(java.nio.ByteBuffer)
com.badlogic.gdx.backends.android.AndroidMusic: void setLooping(boolean)
com.mygdx.game.AndroidLauncher: void onCreate(android.os.Bundle)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: java.lang.String toString()
com.badlogic.gdx.utils.Array: Array(boolean,java.lang.Object[],int,int)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scl(float)
com.mygdx.game.states.PlayState: void handleInput()
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glEnableVertexAttribArray(int)
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: AndroidApplicationConfiguration()
com.badlogic.gdx.backends.android.AndroidFileHandle: java.io.File file()
com.mygdx.game.states.GameStateManager: void push(com.mygdx.game.states.State)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.backends.android.AndroidMusic: void setVolume(float)
com.badlogic.gdx.backends.android.AndroidZipFileHandle: long length()
com.mygdx.game.states.GameStateManager: void render(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.utils.ObjectIntMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.ObjectIntMap: int locateKey(java.lang.Object)
com.badlogic.gdx.backends.android.AndroidApplication$1: void dispose()
com.badlogic.gdx.graphics.VertexAttribute: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.glutils.KTXTextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.backends.android.AndroidGL20: void glShaderSource(int,java.lang.String)
com.badlogic.gdx.math.Vector2: int hashCode()
com.badlogic.gdx.graphics.glutils.ETC1: void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.IndexArray: void setIndices(short[],int,int)
com.badlogic.gdx.utils.BufferUtils: void copy(float[],java.nio.Buffer,int,int)
com.badlogic.gdx.utils.FloatArray: void clear()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.mygdx.game.states.MenuState: void render(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteBuffer(int)
com.badlogic.gdx.utils.NumberUtils: float intToFloatColor(int)
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array getExecutedRunnables()
com.mygdx.game.sprites.Obstacle: boolean collides(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.utils.IntArray: int[] ensureCapacity(int)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void bind()
com.badlogic.gdx.graphics.glutils.FileTextureData: FileTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.badlogic.gdx.graphics.glutils.ETC1: int getHeightPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(float[])
com.badlogic.gdx.utils.Pools: java.lang.Object obtain(java.lang.Class)
com.badlogic.gdx.graphics.Mesh: java.lang.String getManagedStatus()
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Entries iterator()
com.badlogic.gdx.graphics.glutils.ShaderProgram: int fetchUniformLocation(java.lang.String,boolean)
com.badlogic.gdx.graphics.Pixmap: Pixmap(int,int,com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.Texture: int getHeight()
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: void checkNPOT()
com.badlogic.gdx.graphics.GLTexture: void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap,boolean)
com.badlogic.gdx.backends.android.DefaultAndroidInput: int getAndroidInputType(com.badlogic.gdx.Input$OnscreenKeyboardType)
com.badlogic.gdx.utils.FloatArray: java.lang.String toString()
com.badlogic.gdx.math.Rectangle: java.lang.String toString()
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: void findNextIndex()
com.badlogic.gdx.backends.android.DefaultAndroidFiles: DefaultAndroidFiles(android.content.res.AssetManager,android.content.ContextWrapper,boolean)
com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View getView()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidInput getInput()
com.mygdx.game.states.PlayState: void score()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void bind()
com.mygdx.game.sprites.Superman: Superman(int,int)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setPosition(float,float)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
com.badlogic.gdx.graphics.GLTexture: void uploadImageData(int,com.badlogic.gdx.graphics.TextureData,int)
com.mygdx.game.sprites.Obstacle: com.badlogic.gdx.math.Vector2 getPosBottomObstacle()
com.badlogic.gdx.files.FileHandle: byte[] readBytes()
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
com.badlogic.gdx.utils.ObjectMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: void remove()
com.badlogic.gdx.graphics.Pixmap: void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidApplication: int getVersion()
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: BitmapFont$BitmapFontData(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.VertexAttributes: int hashCode()
com.badlogic.gdx.utils.GdxNativesLoader: void load()
com.mygdx.game.states.PlayState: void update(float)
com.badlogic.gdx.net.NetJavaImpl: NetJavaImpl(int)
com.badlogic.gdx.utils.SnapshotArray: void modified()
com.badlogic.gdx.utils.IntSet: IntSet(int,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glClearColor(float,float,float,float)
com.badlogic.gdx.graphics.TextureArray: void load(com.badlogic.gdx.graphics.TextureArrayData)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int toGlType(int)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean isManaged()
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap()
com.badlogic.gdx.math.Vector3: boolean equals(java.lang.Object)
com.badlogic.gdx.backends.android.AndroidGraphics: int getWidth()
com.badlogic.gdx.backends.android.AndroidGL30: void glDrawElementsInstanced(int,int,int,int,int)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: VertexBufferObjectWithVAO(boolean,int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.Pixmap: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.AbstractInput: boolean isKeyPressed(int)
com.badlogic.gdx.graphics.Texture: Texture(java.lang.String)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO: void createVAO()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMapDesktop(int,com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.Pixmap: void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: void load(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.utils.ObjectMap$Keys: ObjectMap$Keys(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.graphics.glutils.VertexArray: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.backends.android.AndroidGL20: int glGenRenderbuffer()
com.badlogic.gdx.graphics.VertexAttributes: int compareTo(com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.backends.android.DefaultAndroidInput: void onPause()
com.badlogic.gdx.backends.android.AndroidMusic: AndroidMusic(com.badlogic.gdx.backends.android.AndroidAudio,android.media.MediaPlayer)
com.badlogic.gdx.utils.ObjectSet: int tableSize(int,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void switchTexture(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: ETC1$ETC1Data(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.ObjectIntMap: java.lang.String toString()
com.badlogic.gdx.math.RandomXS128: double nextDouble()
com.badlogic.gdx.backends.android.DefaultAndroidInput: int lookUpPointerIndex(int)
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
com.badlogic.gdx.utils.StreamUtils: void copyStream(java.io.InputStream,java.io.OutputStream)
com.badlogic.gdx.backends.android.AndroidZipFileHandle: AndroidZipFileHandle(java.lang.String)
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1: void run()
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1: AndroidVisibilityListener$1(com.badlogic.gdx.backends.android.AndroidVisibilityListener,com.badlogic.gdx.backends.android.AndroidApplicationBase)
com.badlogic.gdx.utils.ObjectMap$Entries: void reset()
com.badlogic.gdx.graphics.Pixmap: void dispose()
com.badlogic.gdx.graphics.glutils.FileTextureData: int getHeight()
com.badlogic.gdx.math.RandomXS128: int nextInt()
com.badlogic.gdx.backends.android.AndroidGL20: void glDrawElements(int,int,int,int)
com.badlogic.gdx.backends.android.DefaultAndroidInput$SensorListener: void onSensorChanged(android.hardware.SensorEvent)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void convert(int)
com.badlogic.gdx.backends.android.AndroidGL20: int glGenTexture()
com.badlogic.gdx.graphics.glutils.IndexArray: void bind()
com.badlogic.gdx.utils.Array: Array()
com.badlogic.gdx.backends.android.AndroidZipFileHandle: void initialize()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.GLTexture: void uploadImageData(int,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.files.FileHandle: FileHandle(java.io.File,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.utils.IntSet: int place(int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(int,int,char)
com.badlogic.gdx.graphics.Cubemap: void load(com.badlogic.gdx.graphics.CubemapData)
com.badlogic.gdx.backends.android.AndroidFileHandle: android.content.res.AssetFileDescriptor getAssetFileDescriptor()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: void consumeCustomData(int)
com.badlogic.gdx.graphics.g2d.GlyphLayout: com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun wrap(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,int,int)
com.badlogic.gdx.graphics.g2d.GlyphLayout: java.lang.String toString()
com.badlogic.gdx.graphics.Cubemap: com.badlogic.gdx.graphics.CubemapData getCubemapData()
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(java.lang.String)
com.badlogic.gdx.utils.StringBuilder: java.lang.Appendable append(java.lang.CharSequence,int,int)
com.badlogic.gdx.backends.android.AndroidApplication: AndroidApplication()
com.badlogic.gdx.graphics.Pixmap: int getHeight()
com.badlogic.gdx.backends.android.AndroidApplication$1: void resume()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Graphics getGraphics()
com.badlogic.gdx.graphics.g2d.TextureRegion: int getRegionHeight()
